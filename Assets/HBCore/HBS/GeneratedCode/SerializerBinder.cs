using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
namespace HBS {
    public static partial class SerializerBinder {
        static SerializerBinder() {
            bindsSer.Add(typeof(UnityEngine.UI.AnimationTriggers),new Action<Writer,object>(Ser_unityengine_ui_animationtriggers.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.AnimationTriggers),new Func<Reader,object,object>(Ser_unityengine_ui_animationtriggers.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Button),new Action<Writer,object>(Ser_unityengine_ui_button.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Button),new Func<Reader,object,object>(Ser_unityengine_ui_button.Res));
            bindsSer.Add(typeof(UnityEngine.UI.CanvasUpdate),new Action<Writer,object>(Ser_unityengine_ui_canvasupdate.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.CanvasUpdate),new Func<Reader,object,object>(Ser_unityengine_ui_canvasupdate.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ColorBlock),new Action<Writer,object>(Ser_unityengine_ui_colorblock.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ColorBlock),new Func<Reader,object,object>(Ser_unityengine_ui_colorblock.Res));
            bindsSer.Add(typeof(UnityEngine.UI.DefaultControls.Resources),new Action<Writer,object>(Ser_unityengine_ui_defaultcontrols_resources.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.DefaultControls.Resources),new Func<Reader,object,object>(Ser_unityengine_ui_defaultcontrols_resources.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Dropdown),new Action<Writer,object>(Ser_unityengine_ui_dropdown.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Dropdown),new Func<Reader,object,object>(Ser_unityengine_ui_dropdown.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Dropdown.OptionData),new Action<Writer,object>(Ser_unityengine_ui_dropdown_optiondata.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Dropdown.OptionData),new Func<Reader,object,object>(Ser_unityengine_ui_dropdown_optiondata.Res));
            bindsSer.Add(typeof(UnityEngine.UI.FontData),new Action<Writer,object>(Ser_unityengine_ui_fontdata.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.FontData),new Func<Reader,object,object>(Ser_unityengine_ui_fontdata.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Graphic),new Action<Writer,object>(Ser_unityengine_ui_graphic.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Graphic),new Func<Reader,object,object>(Ser_unityengine_ui_graphic.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GraphicRaycaster),new Action<Writer,object>(Ser_unityengine_ui_graphicraycaster.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GraphicRaycaster),new Func<Reader,object,object>(Ser_unityengine_ui_graphicraycaster.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GraphicRaycaster.BlockingObjects),new Action<Writer,object>(Ser_unityengine_ui_graphicraycaster_blockingobjects.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GraphicRaycaster.BlockingObjects),new Func<Reader,object,object>(Ser_unityengine_ui_graphicraycaster_blockingobjects.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image),new Action<Writer,object>(Ser_unityengine_ui_image.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image),new Func<Reader,object,object>(Ser_unityengine_ui_image.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.Type),new Action<Writer,object>(Ser_unityengine_ui_image_type.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.Type),new Func<Reader,object,object>(Ser_unityengine_ui_image_type.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.FillMethod),new Action<Writer,object>(Ser_unityengine_ui_image_fillmethod.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.FillMethod),new Func<Reader,object,object>(Ser_unityengine_ui_image_fillmethod.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.OriginHorizontal),new Action<Writer,object>(Ser_unityengine_ui_image_originhorizontal.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.OriginHorizontal),new Func<Reader,object,object>(Ser_unityengine_ui_image_originhorizontal.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.OriginVertical),new Action<Writer,object>(Ser_unityengine_ui_image_originvertical.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.OriginVertical),new Func<Reader,object,object>(Ser_unityengine_ui_image_originvertical.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.Origin90),new Action<Writer,object>(Ser_unityengine_ui_image_origin90.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.Origin90),new Func<Reader,object,object>(Ser_unityengine_ui_image_origin90.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.Origin180),new Action<Writer,object>(Ser_unityengine_ui_image_origin180.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.Origin180),new Func<Reader,object,object>(Ser_unityengine_ui_image_origin180.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Image.Origin360),new Action<Writer,object>(Ser_unityengine_ui_image_origin360.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Image.Origin360),new Func<Reader,object,object>(Ser_unityengine_ui_image_origin360.Res));
            bindsSer.Add(typeof(UnityEngine.UI.InputField),new Action<Writer,object>(Ser_unityengine_ui_inputfield.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.InputField),new Func<Reader,object,object>(Ser_unityengine_ui_inputfield.Res));
            bindsSer.Add(typeof(UnityEngine.UI.InputField.ContentType),new Action<Writer,object>(Ser_unityengine_ui_inputfield_contenttype.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.InputField.ContentType),new Func<Reader,object,object>(Ser_unityengine_ui_inputfield_contenttype.Res));
            bindsSer.Add(typeof(UnityEngine.UI.InputField.InputType),new Action<Writer,object>(Ser_unityengine_ui_inputfield_inputtype.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.InputField.InputType),new Func<Reader,object,object>(Ser_unityengine_ui_inputfield_inputtype.Res));
            bindsSer.Add(typeof(UnityEngine.UI.InputField.CharacterValidation),new Action<Writer,object>(Ser_unityengine_ui_inputfield_charactervalidation.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.InputField.CharacterValidation),new Func<Reader,object,object>(Ser_unityengine_ui_inputfield_charactervalidation.Res));
            bindsSer.Add(typeof(UnityEngine.UI.InputField.LineType),new Action<Writer,object>(Ser_unityengine_ui_inputfield_linetype.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.InputField.LineType),new Func<Reader,object,object>(Ser_unityengine_ui_inputfield_linetype.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Mask),new Action<Writer,object>(Ser_unityengine_ui_mask.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Mask),new Func<Reader,object,object>(Ser_unityengine_ui_mask.Res));
            bindsSer.Add(typeof(UnityEngine.UI.MaskableGraphic),new Action<Writer,object>(Ser_unityengine_ui_maskablegraphic.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.MaskableGraphic),new Func<Reader,object,object>(Ser_unityengine_ui_maskablegraphic.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Navigation),new Action<Writer,object>(Ser_unityengine_ui_navigation.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Navigation),new Func<Reader,object,object>(Ser_unityengine_ui_navigation.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Navigation.Mode),new Action<Writer,object>(Ser_unityengine_ui_navigation_mode.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Navigation.Mode),new Func<Reader,object,object>(Ser_unityengine_ui_navigation_mode.Res));
            bindsSer.Add(typeof(UnityEngine.UI.RawImage),new Action<Writer,object>(Ser_unityengine_ui_rawimage.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.RawImage),new Func<Reader,object,object>(Ser_unityengine_ui_rawimage.Res));
            bindsSer.Add(typeof(UnityEngine.UI.RectMask2D),new Action<Writer,object>(Ser_unityengine_ui_rectmask2d.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.RectMask2D),new Func<Reader,object,object>(Ser_unityengine_ui_rectmask2d.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Scrollbar),new Action<Writer,object>(Ser_unityengine_ui_scrollbar.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Scrollbar),new Func<Reader,object,object>(Ser_unityengine_ui_scrollbar.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Scrollbar.Direction),new Action<Writer,object>(Ser_unityengine_ui_scrollbar_direction.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Scrollbar.Direction),new Func<Reader,object,object>(Ser_unityengine_ui_scrollbar_direction.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ScrollRect),new Action<Writer,object>(Ser_unityengine_ui_scrollrect.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ScrollRect),new Func<Reader,object,object>(Ser_unityengine_ui_scrollrect.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ScrollRect.MovementType),new Action<Writer,object>(Ser_unityengine_ui_scrollrect_movementtype.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ScrollRect.MovementType),new Func<Reader,object,object>(Ser_unityengine_ui_scrollrect_movementtype.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ScrollRect.ScrollbarVisibility),new Action<Writer,object>(Ser_unityengine_ui_scrollrect_scrollbarvisibility.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ScrollRect.ScrollbarVisibility),new Func<Reader,object,object>(Ser_unityengine_ui_scrollrect_scrollbarvisibility.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Selectable),new Action<Writer,object>(Ser_unityengine_ui_selectable.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Selectable),new Func<Reader,object,object>(Ser_unityengine_ui_selectable.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Selectable.Transition),new Action<Writer,object>(Ser_unityengine_ui_selectable_transition.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Selectable.Transition),new Func<Reader,object,object>(Ser_unityengine_ui_selectable_transition.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Slider),new Action<Writer,object>(Ser_unityengine_ui_slider.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Slider),new Func<Reader,object,object>(Ser_unityengine_ui_slider.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Slider.Direction),new Action<Writer,object>(Ser_unityengine_ui_slider_direction.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Slider.Direction),new Func<Reader,object,object>(Ser_unityengine_ui_slider_direction.Res));
            bindsSer.Add(typeof(UnityEngine.UI.SpriteState),new Action<Writer,object>(Ser_unityengine_ui_spritestate.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.SpriteState),new Func<Reader,object,object>(Ser_unityengine_ui_spritestate.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Text),new Action<Writer,object>(Ser_unityengine_ui_text.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Text),new Func<Reader,object,object>(Ser_unityengine_ui_text.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Toggle),new Action<Writer,object>(Ser_unityengine_ui_toggle.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Toggle),new Func<Reader,object,object>(Ser_unityengine_ui_toggle.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Toggle.ToggleTransition),new Action<Writer,object>(Ser_unityengine_ui_toggle_toggletransition.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Toggle.ToggleTransition),new Func<Reader,object,object>(Ser_unityengine_ui_toggle_toggletransition.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ToggleGroup),new Action<Writer,object>(Ser_unityengine_ui_togglegroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ToggleGroup),new Func<Reader,object,object>(Ser_unityengine_ui_togglegroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.AspectRatioFitter),new Action<Writer,object>(Ser_unityengine_ui_aspectratiofitter.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.AspectRatioFitter),new Func<Reader,object,object>(Ser_unityengine_ui_aspectratiofitter.Res));
            bindsSer.Add(typeof(UnityEngine.UI.AspectRatioFitter.AspectMode),new Action<Writer,object>(Ser_unityengine_ui_aspectratiofitter_aspectmode.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.AspectRatioFitter.AspectMode),new Func<Reader,object,object>(Ser_unityengine_ui_aspectratiofitter_aspectmode.Res));
            bindsSer.Add(typeof(UnityEngine.UI.CanvasScaler),new Action<Writer,object>(Ser_unityengine_ui_canvasscaler.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.CanvasScaler),new Func<Reader,object,object>(Ser_unityengine_ui_canvasscaler.Res));
            bindsSer.Add(typeof(UnityEngine.UI.CanvasScaler.ScaleMode),new Action<Writer,object>(Ser_unityengine_ui_canvasscaler_scalemode.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.CanvasScaler.ScaleMode),new Func<Reader,object,object>(Ser_unityengine_ui_canvasscaler_scalemode.Res));
            bindsSer.Add(typeof(UnityEngine.UI.CanvasScaler.ScreenMatchMode),new Action<Writer,object>(Ser_unityengine_ui_canvasscaler_screenmatchmode.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.CanvasScaler.ScreenMatchMode),new Func<Reader,object,object>(Ser_unityengine_ui_canvasscaler_screenmatchmode.Res));
            bindsSer.Add(typeof(UnityEngine.UI.CanvasScaler.Unit),new Action<Writer,object>(Ser_unityengine_ui_canvasscaler_unit.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.CanvasScaler.Unit),new Func<Reader,object,object>(Ser_unityengine_ui_canvasscaler_unit.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ContentSizeFitter),new Action<Writer,object>(Ser_unityengine_ui_contentsizefitter.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ContentSizeFitter),new Func<Reader,object,object>(Ser_unityengine_ui_contentsizefitter.Res));
            bindsSer.Add(typeof(UnityEngine.UI.ContentSizeFitter.FitMode),new Action<Writer,object>(Ser_unityengine_ui_contentsizefitter_fitmode.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.ContentSizeFitter.FitMode),new Func<Reader,object,object>(Ser_unityengine_ui_contentsizefitter_fitmode.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GridLayoutGroup),new Action<Writer,object>(Ser_unityengine_ui_gridlayoutgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GridLayoutGroup),new Func<Reader,object,object>(Ser_unityengine_ui_gridlayoutgroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GridLayoutGroup.Corner),new Action<Writer,object>(Ser_unityengine_ui_gridlayoutgroup_corner.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GridLayoutGroup.Corner),new Func<Reader,object,object>(Ser_unityengine_ui_gridlayoutgroup_corner.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GridLayoutGroup.Axis),new Action<Writer,object>(Ser_unityengine_ui_gridlayoutgroup_axis.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GridLayoutGroup.Axis),new Func<Reader,object,object>(Ser_unityengine_ui_gridlayoutgroup_axis.Res));
            bindsSer.Add(typeof(UnityEngine.UI.GridLayoutGroup.Constraint),new Action<Writer,object>(Ser_unityengine_ui_gridlayoutgroup_constraint.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.GridLayoutGroup.Constraint),new Func<Reader,object,object>(Ser_unityengine_ui_gridlayoutgroup_constraint.Res));
            bindsSer.Add(typeof(UnityEngine.UI.HorizontalLayoutGroup),new Action<Writer,object>(Ser_unityengine_ui_horizontallayoutgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.HorizontalLayoutGroup),new Func<Reader,object,object>(Ser_unityengine_ui_horizontallayoutgroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.HorizontalOrVerticalLayoutGroup),new Action<Writer,object>(Ser_unityengine_ui_horizontalorverticallayoutgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.HorizontalOrVerticalLayoutGroup),new Func<Reader,object,object>(Ser_unityengine_ui_horizontalorverticallayoutgroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.LayoutElement),new Action<Writer,object>(Ser_unityengine_ui_layoutelement.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.LayoutElement),new Func<Reader,object,object>(Ser_unityengine_ui_layoutelement.Res));
            bindsSer.Add(typeof(UnityEngine.UI.LayoutGroup),new Action<Writer,object>(Ser_unityengine_ui_layoutgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.LayoutGroup),new Func<Reader,object,object>(Ser_unityengine_ui_layoutgroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.VerticalLayoutGroup),new Action<Writer,object>(Ser_unityengine_ui_verticallayoutgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.VerticalLayoutGroup),new Func<Reader,object,object>(Ser_unityengine_ui_verticallayoutgroup.Res));
            bindsSer.Add(typeof(UnityEngine.UI.BaseMeshEffect),new Action<Writer,object>(Ser_unityengine_ui_basemesheffect.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.BaseMeshEffect),new Func<Reader,object,object>(Ser_unityengine_ui_basemesheffect.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Outline),new Action<Writer,object>(Ser_unityengine_ui_outline.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Outline),new Func<Reader,object,object>(Ser_unityengine_ui_outline.Res));
            bindsSer.Add(typeof(UnityEngine.UI.PositionAsUV1),new Action<Writer,object>(Ser_unityengine_ui_positionasuv1.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.PositionAsUV1),new Func<Reader,object,object>(Ser_unityengine_ui_positionasuv1.Res));
            bindsSer.Add(typeof(UnityEngine.UI.Shadow),new Action<Writer,object>(Ser_unityengine_ui_shadow.Ser));
            bindsRes.Add(typeof(UnityEngine.UI.Shadow),new Func<Reader,object,object>(Ser_unityengine_ui_shadow.Res));
            bindsSer.Add(typeof(HBBuilder.Adjustable),new Action<Writer,object>(Ser_hbbuilder_adjustable.Ser));
            bindsRes.Add(typeof(HBBuilder.Adjustable),new Func<Reader,object,object>(Ser_hbbuilder_adjustable.Res));
            bindsSer.Add(typeof(HBBuilder.Node),new Action<Writer,object>(Ser_hbbuilder_node.Ser));
            bindsRes.Add(typeof(HBBuilder.Node),new Func<Reader,object,object>(Ser_hbbuilder_node.Res));
            bindsSer.Add(typeof(HBBuilder.Handle),new Action<Writer,object>(Ser_hbbuilder_handle.Ser));
            bindsRes.Add(typeof(HBBuilder.Handle),new Func<Reader,object,object>(Ser_hbbuilder_handle.Res));
            bindsSer.Add(typeof(AirWire),new Action<Writer,object>(Ser_airwire.Ser));
            bindsRes.Add(typeof(AirWire),new Func<Reader,object,object>(Ser_airwire.Res));
            bindsSer.Add(typeof(AmmoWire),new Action<Writer,object>(Ser_ammowire.Ser));
            bindsRes.Add(typeof(AmmoWire),new Func<Reader,object,object>(Ser_ammowire.Res));
            bindsSer.Add(typeof(HBBuilder.Assembly),new Action<Writer,object>(Ser_hbbuilder_assembly.Ser));
            bindsRes.Add(typeof(HBBuilder.Assembly),new Func<Reader,object,object>(Ser_hbbuilder_assembly.Res));
            bindsSer.Add(typeof(AudioSourceParented),new Action<Writer,object>(Ser_audiosourceparented.Ser));
            bindsRes.Add(typeof(AudioSourceParented),new Func<Reader,object,object>(Ser_audiosourceparented.Res));
            bindsSer.Add(typeof(HBBuilder.BodyContainer),new Action<Writer,object>(Ser_hbbuilder_bodycontainer.Ser));
            bindsRes.Add(typeof(HBBuilder.BodyContainer),new Func<Reader,object,object>(Ser_hbbuilder_bodycontainer.Res));
            bindsSer.Add(typeof(HBBuilder.CurveHandle),new Action<Writer,object>(Ser_hbbuilder_curvehandle.Ser));
            bindsRes.Add(typeof(HBBuilder.CurveHandle),new Func<Reader,object,object>(Ser_hbbuilder_curvehandle.Res));
            bindsSer.Add(typeof(BuoyancySolver),new Action<Writer,object>(Ser_buoyancysolver.Ser));
            bindsRes.Add(typeof(BuoyancySolver),new Func<Reader,object,object>(Ser_buoyancysolver.Res));
            bindsSer.Add(typeof(CoB),new Action<Writer,object>(Ser_cob.Ser));
            bindsRes.Add(typeof(CoB),new Func<Reader,object,object>(Ser_cob.Res));
            bindsSer.Add(typeof(CoF),new Action<Writer,object>(Ser_cof.Ser));
            bindsRes.Add(typeof(CoF),new Func<Reader,object,object>(Ser_cof.Res));
            bindsSer.Add(typeof(CoG),new Action<Writer,object>(Ser_cog.Ser));
            bindsRes.Add(typeof(CoG),new Func<Reader,object,object>(Ser_cog.Res));
            bindsSer.Add(typeof(CoL),new Action<Writer,object>(Ser_col.Ser));
            bindsRes.Add(typeof(CoL),new Func<Reader,object,object>(Ser_col.Res));
            bindsSer.Add(typeof(DamageGrid),new Action<Writer,object>(Ser_damagegrid.Ser));
            bindsRes.Add(typeof(DamageGrid),new Func<Reader,object,object>(Ser_damagegrid.Res));
            bindsSer.Add(typeof(EffectTag),new Action<Writer,object>(Ser_effecttag.Ser));
            bindsRes.Add(typeof(EffectTag),new Func<Reader,object,object>(Ser_effecttag.Res));
            bindsSer.Add(typeof(ElectricWire),new Action<Writer,object>(Ser_electricwire.Ser));
            bindsRes.Add(typeof(ElectricWire),new Func<Reader,object,object>(Ser_electricwire.Res));
            bindsSer.Add(typeof(FloatWire),new Action<Writer,object>(Ser_floatwire.Ser));
            bindsRes.Add(typeof(FloatWire),new Func<Reader,object,object>(Ser_floatwire.Res));
            bindsSer.Add(typeof(HBBuilder.Frame),new Action<Writer,object>(Ser_hbbuilder_frame.Ser));
            bindsRes.Add(typeof(HBBuilder.Frame),new Func<Reader,object,object>(Ser_hbbuilder_frame.Res));
            bindsSer.Add(typeof(HBBuilder.LineData),new Action<Writer,object>(Ser_hbbuilder_linedata.Ser));
            bindsRes.Add(typeof(HBBuilder.LineData),new Func<Reader,object,object>(Ser_hbbuilder_linedata.Res));
            bindsSer.Add(typeof(FuelWire),new Action<Writer,object>(Ser_fuelwire.Ser));
            bindsRes.Add(typeof(FuelWire),new Func<Reader,object,object>(Ser_fuelwire.Res));
            bindsSer.Add(typeof(HBLensFlare),new Action<Writer,object>(Ser_hblensflare.Ser));
            bindsRes.Add(typeof(HBLensFlare),new Func<Reader,object,object>(Ser_hblensflare.Res));
            bindsSer.Add(typeof(HBWing),new Action<Writer,object>(Ser_hbwing.Ser));
            bindsRes.Add(typeof(HBWing),new Func<Reader,object,object>(Ser_hbwing.Res));
            bindsSer.Add(typeof(HBBuilder.Hull),new Action<Writer,object>(Ser_hbbuilder_hull.Ser));
            bindsRes.Add(typeof(HBBuilder.Hull),new Func<Reader,object,object>(Ser_hbbuilder_hull.Res));
            bindsSer.Add(typeof(HBBuilder.QuadData),new Action<Writer,object>(Ser_hbbuilder_quaddata.Ser));
            bindsRes.Add(typeof(HBBuilder.QuadData),new Func<Reader,object,object>(Ser_hbbuilder_quaddata.Res));
            bindsSer.Add(typeof(HBBuilder.TriData),new Action<Writer,object>(Ser_hbbuilder_tridata.Ser));
            bindsRes.Add(typeof(HBBuilder.TriData),new Func<Reader,object,object>(Ser_hbbuilder_tridata.Res));
            bindsSer.Add(typeof(IndicatorTag),new Action<Writer,object>(Ser_indicatortag.Ser));
            bindsRes.Add(typeof(IndicatorTag),new Func<Reader,object,object>(Ser_indicatortag.Res));
            bindsSer.Add(typeof(JointWire),new Action<Writer,object>(Ser_jointwire.Ser));
            bindsRes.Add(typeof(JointWire),new Func<Reader,object,object>(Ser_jointwire.Res));
            bindsSer.Add(typeof(Part),new Action<Writer,object>(Ser_part.Ser));
            bindsRes.Add(typeof(Part),new Func<Reader,object,object>(Ser_part.Res));
            bindsSer.Add(typeof(PartContainer),new Action<Writer,object>(Ser_partcontainer.Ser));
            bindsRes.Add(typeof(PartContainer),new Func<Reader,object,object>(Ser_partcontainer.Res));
            bindsSer.Add(typeof(RefrenceID),new Action<Writer,object>(Ser_refrenceid.Ser));
            bindsRes.Add(typeof(RefrenceID),new Func<Reader,object,object>(Ser_refrenceid.Res));
            bindsSer.Add(typeof(ScaleRestrictor),new Action<Writer,object>(Ser_scalerestrictor.Ser));
            bindsRes.Add(typeof(ScaleRestrictor),new Func<Reader,object,object>(Ser_scalerestrictor.Res));
            bindsSer.Add(typeof(ScaleRestriction),new Action<Writer,object>(Ser_scalerestriction.Ser));
            bindsRes.Add(typeof(ScaleRestriction),new Func<Reader,object,object>(Ser_scalerestriction.Res));
            bindsSer.Add(typeof(SeatWire),new Action<Writer,object>(Ser_seatwire.Ser));
            bindsRes.Add(typeof(SeatWire),new Func<Reader,object,object>(Ser_seatwire.Res));
            bindsSer.Add(typeof(SimpleDriveShaft),new Action<Writer,object>(Ser_simpledriveshaft.Ser));
            bindsRes.Add(typeof(SimpleDriveShaft),new Func<Reader,object,object>(Ser_simpledriveshaft.Res));
            bindsSer.Add(typeof(StagedAudioLoop),new Action<Writer,object>(Ser_stagedaudioloop.Ser));
            bindsRes.Add(typeof(StagedAudioLoop),new Func<Reader,object,object>(Ser_stagedaudioloop.Res));
            bindsSer.Add(typeof(StagedAudioLoop.Stage),new Action<Writer,object>(Ser_stagedaudioloop_stage.Ser));
            bindsRes.Add(typeof(StagedAudioLoop.Stage),new Func<Reader,object,object>(Ser_stagedaudioloop_stage.Res));
            bindsSer.Add(typeof(HBBuilder.StringDataContainer),new Action<Writer,object>(Ser_hbbuilder_stringdatacontainer.Ser));
            bindsRes.Add(typeof(HBBuilder.StringDataContainer),new Func<Reader,object,object>(Ser_hbbuilder_stringdatacontainer.Res));
            bindsSer.Add(typeof(ForceCurve),new Action<Writer,object>(Ser_forcecurve.Ser));
            bindsRes.Add(typeof(ForceCurve),new Func<Reader,object,object>(Ser_forcecurve.Res));
            bindsSer.Add(typeof(HBAdjustablePontoon),new Action<Writer,object>(Ser_hbadjustablepontoon.Ser));
            bindsRes.Add(typeof(HBAdjustablePontoon),new Func<Reader,object,object>(Ser_hbadjustablepontoon.Res));
            bindsSer.Add(typeof(HBAdjustableWing),new Action<Writer,object>(Ser_hbadjustablewing.Ser));
            bindsRes.Add(typeof(HBAdjustableWing),new Func<Reader,object,object>(Ser_hbadjustablewing.Res));
            bindsSer.Add(typeof(HBAirCompressor),new Action<Writer,object>(Ser_hbaircompressor.Ser));
            bindsRes.Add(typeof(HBAirCompressor),new Func<Reader,object,object>(Ser_hbaircompressor.Res));
            bindsSer.Add(typeof(HBAirTank),new Action<Writer,object>(Ser_hbairtank.Ser));
            bindsRes.Add(typeof(HBAirTank),new Func<Reader,object,object>(Ser_hbairtank.Res));
            bindsSer.Add(typeof(HBAmmoBox),new Action<Writer,object>(Ser_hbammobox.Ser));
            bindsRes.Add(typeof(HBAmmoBox),new Func<Reader,object,object>(Ser_hbammobox.Res));
            bindsSer.Add(typeof(HBAudioLoop),new Action<Writer,object>(Ser_hbaudioloop.Ser));
            bindsRes.Add(typeof(HBAudioLoop),new Func<Reader,object,object>(Ser_hbaudioloop.Res));
            bindsSer.Add(typeof(HBBallast),new Action<Writer,object>(Ser_hbballast.Ser));
            bindsRes.Add(typeof(HBBallast),new Func<Reader,object,object>(Ser_hbballast.Res));
            bindsSer.Add(typeof(HBBattery),new Action<Writer,object>(Ser_hbbattery.Ser));
            bindsRes.Add(typeof(HBBattery),new Func<Reader,object,object>(Ser_hbbattery.Res));
            bindsSer.Add(typeof(HBBlendShape),new Action<Writer,object>(Ser_hbblendshape.Ser));
            bindsRes.Add(typeof(HBBlendShape),new Func<Reader,object,object>(Ser_hbblendshape.Res));
            bindsSer.Add(typeof(HBBlimp),new Action<Writer,object>(Ser_hbblimp.Ser));
            bindsRes.Add(typeof(HBBlimp),new Func<Reader,object,object>(Ser_hbblimp.Res));
            bindsSer.Add(typeof(HBBuoyancyTanks),new Action<Writer,object>(Ser_hbbuoyancytanks.Ser));
            bindsRes.Add(typeof(HBBuoyancyTanks),new Func<Reader,object,object>(Ser_hbbuoyancytanks.Res));
            bindsSer.Add(typeof(HBButton),new Action<Writer,object>(Ser_hbbutton.Ser));
            bindsRes.Add(typeof(HBButton),new Func<Reader,object,object>(Ser_hbbutton.Res));
            bindsSer.Add(typeof(HBCCTV),new Action<Writer,object>(Ser_hbcctv.Ser));
            bindsRes.Add(typeof(HBCCTV),new Func<Reader,object,object>(Ser_hbcctv.Res));
            bindsSer.Add(typeof(HBCCTVDisplay),new Action<Writer,object>(Ser_hbcctvdisplay.Ser));
            bindsRes.Add(typeof(HBCCTVDisplay),new Func<Reader,object,object>(Ser_hbcctvdisplay.Res));
            bindsSer.Add(typeof(HBClock),new Action<Writer,object>(Ser_hbclock.Ser));
            bindsRes.Add(typeof(HBClock),new Func<Reader,object,object>(Ser_hbclock.Res));
            bindsSer.Add(typeof(HBCombineBox),new Action<Writer,object>(Ser_hbcombinebox.Ser));
            bindsRes.Add(typeof(HBCombineBox),new Func<Reader,object,object>(Ser_hbcombinebox.Res));
            bindsSer.Add(typeof(HBCycleBox),new Action<Writer,object>(Ser_hbcyclebox.Ser));
            bindsRes.Add(typeof(HBCycleBox),new Func<Reader,object,object>(Ser_hbcyclebox.Res));
            bindsSer.Add(typeof(HBDetacher),new Action<Writer,object>(Ser_hbdetacher.Ser));
            bindsRes.Add(typeof(HBDetacher),new Func<Reader,object,object>(Ser_hbdetacher.Res));
            bindsSer.Add(typeof(HBDistancemeter),new Action<Writer,object>(Ser_hbdistancemeter.Ser));
            bindsRes.Add(typeof(HBDistancemeter),new Func<Reader,object,object>(Ser_hbdistancemeter.Res));
            bindsSer.Add(typeof(HBDragModifier),new Action<Writer,object>(Ser_hbdragmodifier.Ser));
            bindsRes.Add(typeof(HBDragModifier),new Func<Reader,object,object>(Ser_hbdragmodifier.Res));
            bindsSer.Add(typeof(HBElectricAnalogSwitch),new Action<Writer,object>(Ser_hbelectricanalogswitch.Ser));
            bindsRes.Add(typeof(HBElectricAnalogSwitch),new Func<Reader,object,object>(Ser_hbelectricanalogswitch.Res));
            bindsSer.Add(typeof(HBElectricMotor),new Action<Writer,object>(Ser_hbelectricmotor.Ser));
            bindsRes.Add(typeof(HBElectricMotor),new Func<Reader,object,object>(Ser_hbelectricmotor.Res));
            bindsSer.Add(typeof(HBElectricSelector),new Action<Writer,object>(Ser_hbelectricselector.Ser));
            bindsRes.Add(typeof(HBElectricSelector),new Func<Reader,object,object>(Ser_hbelectricselector.Res));
            bindsSer.Add(typeof(HBEquationBox),new Action<Writer,object>(Ser_hbequationbox.Ser));
            bindsRes.Add(typeof(HBEquationBox),new Func<Reader,object,object>(Ser_hbequationbox.Res));
            bindsSer.Add(typeof(HBFloatSmoothBox),new Action<Writer,object>(Ser_hbfloatsmoothbox.Ser));
            bindsRes.Add(typeof(HBFloatSmoothBox),new Func<Reader,object,object>(Ser_hbfloatsmoothbox.Res));
            bindsSer.Add(typeof(HBFloatToggleSwitch),new Action<Writer,object>(Ser_hbfloattoggleswitch.Ser));
            bindsRes.Add(typeof(HBFloatToggleSwitch),new Func<Reader,object,object>(Ser_hbfloattoggleswitch.Res));
            bindsSer.Add(typeof(HBFlyWheel),new Action<Writer,object>(Ser_hbflywheel.Ser));
            bindsRes.Add(typeof(HBFlyWheel),new Func<Reader,object,object>(Ser_hbflywheel.Res));
            bindsSer.Add(typeof(HBFuelTank),new Action<Writer,object>(Ser_hbfueltank.Ser));
            bindsRes.Add(typeof(HBFuelTank),new Func<Reader,object,object>(Ser_hbfueltank.Res));
            bindsSer.Add(typeof(HBGPS),new Action<Writer,object>(Ser_hbgps.Ser));
            bindsRes.Add(typeof(HBGPS),new Func<Reader,object,object>(Ser_hbgps.Res));
            bindsSer.Add(typeof(HBGasTurbineEngine),new Action<Writer,object>(Ser_hbgasturbineengine.Ser));
            bindsRes.Add(typeof(HBGasTurbineEngine),new Func<Reader,object,object>(Ser_hbgasturbineengine.Res));
            bindsSer.Add(typeof(HBGunMount),new Action<Writer,object>(Ser_hbgunmount.Ser));
            bindsRes.Add(typeof(HBGunMount),new Func<Reader,object,object>(Ser_hbgunmount.Res));
            bindsSer.Add(typeof(HBGyro),new Action<Writer,object>(Ser_hbgyro.Ser));
            bindsRes.Add(typeof(HBGyro),new Func<Reader,object,object>(Ser_hbgyro.Res));
            bindsSer.Add(typeof(HBGyroAccelerometre),new Action<Writer,object>(Ser_hbgyroaccelerometre.Ser));
            bindsRes.Add(typeof(HBGyroAccelerometre),new Func<Reader,object,object>(Ser_hbgyroaccelerometre.Res));
            bindsSer.Add(typeof(HBGyrometre),new Action<Writer,object>(Ser_hbgyrometre.Ser));
            bindsRes.Add(typeof(HBGyrometre),new Func<Reader,object,object>(Ser_hbgyrometre.Res));
            bindsSer.Add(typeof(HBHeliPropellor),new Action<Writer,object>(Ser_hbhelipropellor.Ser));
            bindsRes.Add(typeof(HBHeliPropellor),new Func<Reader,object,object>(Ser_hbhelipropellor.Res));
            bindsSer.Add(typeof(HBHelicopterHub),new Action<Writer,object>(Ser_hbhelicopterhub.Ser));
            bindsRes.Add(typeof(HBHelicopterHub),new Func<Reader,object,object>(Ser_hbhelicopterhub.Res));
            bindsSer.Add(typeof(HBHelicopterPropellor),new Action<Writer,object>(Ser_hbhelicopterpropellor.Ser));
            bindsRes.Add(typeof(HBHelicopterPropellor),new Func<Reader,object,object>(Ser_hbhelicopterpropellor.Res));
            bindsSer.Add(typeof(HBHemiRotator),new Action<Writer,object>(Ser_hbhemirotator.Ser));
            bindsRes.Add(typeof(HBHemiRotator),new Func<Reader,object,object>(Ser_hbhemirotator.Res));
            bindsSer.Add(typeof(HBHinge),new Action<Writer,object>(Ser_hbhinge.Ser));
            bindsRes.Add(typeof(HBHinge),new Func<Reader,object,object>(Ser_hbhinge.Res));
            bindsSer.Add(typeof(HBHotAirBalloon),new Action<Writer,object>(Ser_hbhotairballoon.Ser));
            bindsRes.Add(typeof(HBHotAirBalloon),new Func<Reader,object,object>(Ser_hbhotairballoon.Res));
            bindsSer.Add(typeof(HBIfBlock),new Action<Writer,object>(Ser_hbifblock.Ser));
            bindsRes.Add(typeof(HBIfBlock),new Func<Reader,object,object>(Ser_hbifblock.Res));
            bindsSer.Add(typeof(HBJetEngine),new Action<Writer,object>(Ser_hbjetengine.Ser));
            bindsRes.Add(typeof(HBJetEngine),new Func<Reader,object,object>(Ser_hbjetengine.Res));
            bindsSer.Add(typeof(HBJointNob),new Action<Writer,object>(Ser_hbjointnob.Ser));
            bindsRes.Add(typeof(HBJointNob),new Func<Reader,object,object>(Ser_hbjointnob.Res));
            bindsSer.Add(typeof(HBLight),new Action<Writer,object>(Ser_hblight.Ser));
            bindsRes.Add(typeof(HBLight),new Func<Reader,object,object>(Ser_hblight.Res));
            bindsSer.Add(typeof(HBMathBox),new Action<Writer,object>(Ser_hbmathbox.Ser));
            bindsRes.Add(typeof(HBMathBox),new Func<Reader,object,object>(Ser_hbmathbox.Res));
            bindsSer.Add(typeof(HBMemoryBox),new Action<Writer,object>(Ser_hbmemorybox.Ser));
            bindsRes.Add(typeof(HBMemoryBox),new Func<Reader,object,object>(Ser_hbmemorybox.Res));
            bindsSer.Add(typeof(HBModifierBox),new Action<Writer,object>(Ser_hbmodifierbox.Ser));
            bindsRes.Add(typeof(HBModifierBox),new Func<Reader,object,object>(Ser_hbmodifierbox.Res));
            bindsSer.Add(typeof(HBNavigator),new Action<Writer,object>(Ser_hbnavigator.Ser));
            bindsRes.Add(typeof(HBNavigator),new Func<Reader,object,object>(Ser_hbnavigator.Res));
            bindsSer.Add(typeof(HBNoteblock),new Action<Writer,object>(Ser_hbnoteblock.Ser));
            bindsRes.Add(typeof(HBNoteblock),new Func<Reader,object,object>(Ser_hbnoteblock.Res));
            bindsSer.Add(typeof(HBNumberDisplay),new Action<Writer,object>(Ser_hbnumberdisplay.Ser));
            bindsRes.Add(typeof(HBNumberDisplay),new Func<Reader,object,object>(Ser_hbnumberdisplay.Res));
            bindsSer.Add(typeof(HBNumberPlate),new Action<Writer,object>(Ser_hbnumberplate.Ser));
            bindsRes.Add(typeof(HBNumberPlate),new Func<Reader,object,object>(Ser_hbnumberplate.Res));
            bindsSer.Add(typeof(HBParticleRate),new Action<Writer,object>(Ser_hbparticlerate.Ser));
            bindsRes.Add(typeof(HBParticleRate),new Func<Reader,object,object>(Ser_hbparticlerate.Res));
            bindsSer.Add(typeof(HBPixel),new Action<Writer,object>(Ser_hbpixel.Ser));
            bindsRes.Add(typeof(HBPixel),new Func<Reader,object,object>(Ser_hbpixel.Res));
            bindsSer.Add(typeof(HBPropellor),new Action<Writer,object>(Ser_hbpropellor.Ser));
            bindsRes.Add(typeof(HBPropellor),new Func<Reader,object,object>(Ser_hbpropellor.Res));
            bindsSer.Add(typeof(HBRamjet),new Action<Writer,object>(Ser_hbramjet.Ser));
            bindsRes.Add(typeof(HBRamjet),new Func<Reader,object,object>(Ser_hbramjet.Res));
            bindsSer.Add(typeof(HBReceiver),new Action<Writer,object>(Ser_hbreceiver.Ser));
            bindsRes.Add(typeof(HBReceiver),new Func<Reader,object,object>(Ser_hbreceiver.Res));
            bindsSer.Add(typeof(HBRocketEngine),new Action<Writer,object>(Ser_hbrocketengine.Ser));
            bindsRes.Add(typeof(HBRocketEngine),new Func<Reader,object,object>(Ser_hbrocketengine.Res));
            bindsSer.Add(typeof(HBRotationGyro),new Action<Writer,object>(Ser_hbrotationgyro.Ser));
            bindsRes.Add(typeof(HBRotationGyro),new Func<Reader,object,object>(Ser_hbrotationgyro.Res));
            bindsSer.Add(typeof(HBRotator),new Action<Writer,object>(Ser_hbrotator.Ser));
            bindsRes.Add(typeof(HBRotator),new Func<Reader,object,object>(Ser_hbrotator.Res));
            bindsSer.Add(typeof(HBRoundBox),new Action<Writer,object>(Ser_hbroundbox.Ser));
            bindsRes.Add(typeof(HBRoundBox),new Func<Reader,object,object>(Ser_hbroundbox.Res));
            bindsSer.Add(typeof(HBRouterBox),new Action<Writer,object>(Ser_hbrouterbox.Ser));
            bindsRes.Add(typeof(HBRouterBox),new Func<Reader,object,object>(Ser_hbrouterbox.Res));
            bindsSer.Add(typeof(HBSeat),new Action<Writer,object>(Ser_hbseat.Ser));
            bindsRes.Add(typeof(HBSeat),new Func<Reader,object,object>(Ser_hbseat.Res));
            bindsSer.Add(typeof(HBSelector),new Action<Writer,object>(Ser_hbselector.Ser));
            bindsRes.Add(typeof(HBSelector),new Func<Reader,object,object>(Ser_hbselector.Res));
            bindsSer.Add(typeof(HBSequencer),new Action<Writer,object>(Ser_hbsequencer.Ser));
            bindsRes.Add(typeof(HBSequencer),new Func<Reader,object,object>(Ser_hbsequencer.Res));
            bindsSer.Add(typeof(HBShiftBox),new Action<Writer,object>(Ser_hbshiftbox.Ser));
            bindsRes.Add(typeof(HBShiftBox),new Func<Reader,object,object>(Ser_hbshiftbox.Res));
            bindsSer.Add(typeof(HBSimpleCombustionEngine),new Action<Writer,object>(Ser_hbsimplecombustionengine.Ser));
            bindsRes.Add(typeof(HBSimpleCombustionEngine),new Func<Reader,object,object>(Ser_hbsimplecombustionengine.Res));
            bindsSer.Add(typeof(HBSimpleHelicopterPropellorHub),new Action<Writer,object>(Ser_hbsimplehelicopterpropellorhub.Ser));
            bindsRes.Add(typeof(HBSimpleHelicopterPropellorHub),new Func<Reader,object,object>(Ser_hbsimplehelicopterpropellorhub.Res));
            bindsSer.Add(typeof(HBSimplePropellorHub),new Action<Writer,object>(Ser_hbsimplepropellorhub.Ser));
            bindsRes.Add(typeof(HBSimplePropellorHub),new Func<Reader,object,object>(Ser_hbsimplepropellorhub.Res));
            bindsSer.Add(typeof(HBSimpleSingleGearBox),new Action<Writer,object>(Ser_hbsimplesinglegearbox.Ser));
            bindsRes.Add(typeof(HBSimpleSingleGearBox),new Func<Reader,object,object>(Ser_hbsimplesinglegearbox.Res));
            bindsSer.Add(typeof(HBSimpleTransmission),new Action<Writer,object>(Ser_hbsimpletransmission.Ser));
            bindsRes.Add(typeof(HBSimpleTransmission),new Func<Reader,object,object>(Ser_hbsimpletransmission.Res));
            bindsSer.Add(typeof(HBSimpleWheelHub),new Action<Writer,object>(Ser_hbsimplewheelhub.Ser));
            bindsRes.Add(typeof(HBSimpleWheelHub),new Func<Reader,object,object>(Ser_hbsimplewheelhub.Res));
            bindsSer.Add(typeof(HBSolarPanel),new Action<Writer,object>(Ser_hbsolarpanel.Ser));
            bindsRes.Add(typeof(HBSolarPanel),new Func<Reader,object,object>(Ser_hbsolarpanel.Res));
            bindsSer.Add(typeof(HBSolidRocketMount),new Action<Writer,object>(Ser_hbsolidrocketmount.Ser));
            bindsRes.Add(typeof(HBSolidRocketMount),new Func<Reader,object,object>(Ser_hbsolidrocketmount.Res));
            bindsSer.Add(typeof(HBSpeedometre),new Action<Writer,object>(Ser_hbspeedometre.Ser));
            bindsRes.Add(typeof(HBSpeedometre),new Func<Reader,object,object>(Ser_hbspeedometre.Res));
            bindsSer.Add(typeof(HBSteerWheelHub),new Action<Writer,object>(Ser_hbsteerwheelhub.Ser));
            bindsRes.Add(typeof(HBSteerWheelHub),new Func<Reader,object,object>(Ser_hbsteerwheelhub.Res));
            bindsSer.Add(typeof(HBStrobeLight),new Action<Writer,object>(Ser_hbstrobelight.Ser));
            bindsRes.Add(typeof(HBStrobeLight),new Func<Reader,object,object>(Ser_hbstrobelight.Res));
            bindsSer.Add(typeof(HBSupplyMagnet),new Action<Writer,object>(Ser_hbsupplymagnet.Ser));
            bindsRes.Add(typeof(HBSupplyMagnet),new Func<Reader,object,object>(Ser_hbsupplymagnet.Res));
            bindsSer.Add(typeof(HBTransistorBox),new Action<Writer,object>(Ser_hbtransistorbox.Ser));
            bindsRes.Add(typeof(HBTransistorBox),new Func<Reader,object,object>(Ser_hbtransistorbox.Res));
            bindsSer.Add(typeof(HBTranslator),new Action<Writer,object>(Ser_hbtranslator.Ser));
            bindsRes.Add(typeof(HBTranslator),new Func<Reader,object,object>(Ser_hbtranslator.Res));
            bindsSer.Add(typeof(HBTransmitter),new Action<Writer,object>(Ser_hbtransmitter.Ser));
            bindsRes.Add(typeof(HBTransmitter),new Func<Reader,object,object>(Ser_hbtransmitter.Res));
            bindsSer.Add(typeof(HBValueBox),new Action<Writer,object>(Ser_hbvaluebox.Ser));
            bindsRes.Add(typeof(HBValueBox),new Func<Reader,object,object>(Ser_hbvaluebox.Res));
            bindsSer.Add(typeof(HBVectorMathBox),new Action<Writer,object>(Ser_hbvectormathbox.Ser));
            bindsRes.Add(typeof(HBVectorMathBox),new Func<Reader,object,object>(Ser_hbvectormathbox.Res));
            bindsSer.Add(typeof(HBWeapon),new Action<Writer,object>(Ser_hbweapon.Ser));
            bindsRes.Add(typeof(HBWeapon),new Func<Reader,object,object>(Ser_hbweapon.Res));
            bindsSer.Add(typeof(HBWheel),new Action<Writer,object>(Ser_hbwheel.Ser));
            bindsRes.Add(typeof(HBWheel),new Func<Reader,object,object>(Ser_hbwheel.Res));
            bindsSer.Add(typeof(SpringTransform),new Action<Writer,object>(Ser_springtransform.Ser));
            bindsRes.Add(typeof(SpringTransform),new Func<Reader,object,object>(Ser_springtransform.Res));
            bindsSer.Add(typeof(TorqueCurve),new Action<Writer,object>(Ser_torquecurve.Ser));
            bindsRes.Add(typeof(TorqueCurve),new Func<Reader,object,object>(Ser_torquecurve.Res));
            bindsSer.Add(typeof(VectorWire),new Action<Writer,object>(Ser_vectorwire.Ser));
            bindsRes.Add(typeof(VectorWire),new Func<Reader,object,object>(Ser_vectorwire.Res));
            bindsSer.Add(typeof(WingTrail),new Action<Writer,object>(Ser_wingtrail.Ser));
            bindsRes.Add(typeof(WingTrail),new Func<Reader,object,object>(Ser_wingtrail.Res));
            bindsSer.Add(typeof(UnityEngine.jvalue),new Action<Writer,object>(Ser_unityengine_jvalue.Ser));
            bindsRes.Add(typeof(UnityEngine.jvalue),new Func<Reader,object,object>(Ser_unityengine_jvalue.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkReachability),new Action<Writer,object>(Ser_unityengine_networkreachability.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkReachability),new Func<Reader,object,object>(Ser_unityengine_networkreachability.Res));
            bindsSer.Add(typeof(UnityEngine.UserAuthorization),new Action<Writer,object>(Ser_unityengine_userauthorization.Ser));
            bindsRes.Add(typeof(UnityEngine.UserAuthorization),new Func<Reader,object,object>(Ser_unityengine_userauthorization.Res));
            bindsSer.Add(typeof(UnityEngine.ApplicationInstallMode),new Action<Writer,object>(Ser_unityengine_applicationinstallmode.Ser));
            bindsRes.Add(typeof(UnityEngine.ApplicationInstallMode),new Func<Reader,object,object>(Ser_unityengine_applicationinstallmode.Res));
            bindsSer.Add(typeof(UnityEngine.ApplicationSandboxType),new Action<Writer,object>(Ser_unityengine_applicationsandboxtype.Ser));
            bindsRes.Add(typeof(UnityEngine.ApplicationSandboxType),new Func<Reader,object,object>(Ser_unityengine_applicationsandboxtype.Res));
            bindsSer.Add(typeof(UnityEngine.AssetBundleCreateRequest),new Action<Writer,object>(Ser_unityengine_assetbundlecreaterequest.Ser));
            bindsRes.Add(typeof(UnityEngine.AssetBundleCreateRequest),new Func<Reader,object,object>(Ser_unityengine_assetbundlecreaterequest.Res));
            bindsSer.Add(typeof(UnityEngine.AssetBundleRequest),new Action<Writer,object>(Ser_unityengine_assetbundlerequest.Ser));
            bindsRes.Add(typeof(UnityEngine.AssetBundleRequest),new Func<Reader,object,object>(Ser_unityengine_assetbundlerequest.Res));
            bindsSer.Add(typeof(UnityEngine.AssetBundle),new Action<Writer,object>(Ser_unityengine_assetbundle.Ser));
            bindsRes.Add(typeof(UnityEngine.AssetBundle),new Func<Reader,object,object>(Ser_unityengine_assetbundle.Res));
            bindsSer.Add(typeof(UnityEngine.AssetBundleManifest),new Action<Writer,object>(Ser_unityengine_assetbundlemanifest.Ser));
            bindsRes.Add(typeof(UnityEngine.AssetBundleManifest),new Func<Reader,object,object>(Ser_unityengine_assetbundlemanifest.Res));
            bindsSer.Add(typeof(UnityEngine.AsyncOperation),new Action<Writer,object>(Ser_unityengine_asyncoperation.Ser));
            bindsRes.Add(typeof(UnityEngine.AsyncOperation),new Func<Reader,object,object>(Ser_unityengine_asyncoperation.Res));
            bindsSer.Add(typeof(UnityEngine.ScriptableObject),new Action<Writer,object>(Ser_unityengine_scriptableobject.Ser));
            bindsRes.Add(typeof(UnityEngine.ScriptableObject),new Func<Reader,object,object>(Ser_unityengine_scriptableobject.Res));
            bindsSer.Add(typeof(UnityEngine.Behaviour),new Action<Writer,object>(Ser_unityengine_behaviour.Ser));
            bindsRes.Add(typeof(UnityEngine.Behaviour),new Func<Reader,object,object>(Ser_unityengine_behaviour.Res));
            bindsSer.Add(typeof(UnityEngine.BillboardAsset),new Action<Writer,object>(Ser_unityengine_billboardasset.Ser));
            bindsRes.Add(typeof(UnityEngine.BillboardAsset),new Func<Reader,object,object>(Ser_unityengine_billboardasset.Res));
            bindsSer.Add(typeof(UnityEngine.BillboardRenderer),new Action<Writer,object>(Ser_unityengine_billboardrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.BillboardRenderer),new Func<Reader,object,object>(Ser_unityengine_billboardrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.Camera),new Action<Writer,object>(Ser_unityengine_camera.Ser));
            bindsRes.Add(typeof(UnityEngine.Camera),new Func<Reader,object,object>(Ser_unityengine_camera.Res));
            bindsSer.Add(typeof(UnityEngine.Camera.StereoscopicEye),new Action<Writer,object>(Ser_unityengine_camera_stereoscopiceye.Ser));
            bindsRes.Add(typeof(UnityEngine.Camera.StereoscopicEye),new Func<Reader,object,object>(Ser_unityengine_camera_stereoscopiceye.Res));
            bindsSer.Add(typeof(UnityEngine.Camera.MonoOrStereoscopicEye),new Action<Writer,object>(Ser_unityengine_camera_monoorstereoscopiceye.Ser));
            bindsRes.Add(typeof(UnityEngine.Camera.MonoOrStereoscopicEye),new Func<Reader,object,object>(Ser_unityengine_camera_monoorstereoscopiceye.Res));
            bindsSer.Add(typeof(UnityEngine.Component),new Action<Writer,object>(Ser_unityengine_component.Ser));
            bindsRes.Add(typeof(UnityEngine.Component),new Func<Reader,object,object>(Ser_unityengine_component.Res));
            bindsSer.Add(typeof(UnityEngine.ComputeShader),new Action<Writer,object>(Ser_unityengine_computeshader.Ser));
            bindsRes.Add(typeof(UnityEngine.ComputeShader),new Func<Reader,object,object>(Ser_unityengine_computeshader.Res));
            bindsSer.Add(typeof(UnityEngine.BoundingSphere),new Action<Writer,object>(Ser_unityengine_boundingsphere.Ser));
            bindsRes.Add(typeof(UnityEngine.BoundingSphere),new Func<Reader,object,object>(Ser_unityengine_boundingsphere.Res));
            bindsSer.Add(typeof(UnityEngine.CullingGroup),new Action<Writer,object>(Ser_unityengine_cullinggroup.Ser));
            bindsRes.Add(typeof(UnityEngine.CullingGroup),new Func<Reader,object,object>(Ser_unityengine_cullinggroup.Res));
            bindsSer.Add(typeof(UnityEngine.CursorMode),new Action<Writer,object>(Ser_unityengine_cursormode.Ser));
            bindsRes.Add(typeof(UnityEngine.CursorMode),new Func<Reader,object,object>(Ser_unityengine_cursormode.Res));
            bindsSer.Add(typeof(UnityEngine.CursorLockMode),new Action<Writer,object>(Ser_unityengine_cursorlockmode.Ser));
            bindsRes.Add(typeof(UnityEngine.CursorLockMode),new Func<Reader,object,object>(Ser_unityengine_cursorlockmode.Res));
            bindsSer.Add(typeof(UnityEngine.FlareLayer),new Action<Writer,object>(Ser_unityengine_flarelayer.Ser));
            bindsRes.Add(typeof(UnityEngine.FlareLayer),new Func<Reader,object,object>(Ser_unityengine_flarelayer.Res));
            bindsSer.Add(typeof(UnityEngine.GameObject),new Action<Writer,object>(Ser_unityengine_gameobject.Ser));
            bindsRes.Add(typeof(UnityEngine.GameObject),new Func<Reader,object,object>(Ser_unityengine_gameobject.Res));
            bindsSer.Add(typeof(UnityEngine.GradientColorKey),new Action<Writer,object>(Ser_unityengine_gradientcolorkey.Ser));
            bindsRes.Add(typeof(UnityEngine.GradientColorKey),new Func<Reader,object,object>(Ser_unityengine_gradientcolorkey.Res));
            bindsSer.Add(typeof(UnityEngine.GradientAlphaKey),new Action<Writer,object>(Ser_unityengine_gradientalphakey.Ser));
            bindsRes.Add(typeof(UnityEngine.GradientAlphaKey),new Func<Reader,object,object>(Ser_unityengine_gradientalphakey.Res));
            bindsSer.Add(typeof(UnityEngine.GradientMode),new Action<Writer,object>(Ser_unityengine_gradientmode.Ser));
            bindsRes.Add(typeof(UnityEngine.GradientMode),new Func<Reader,object,object>(Ser_unityengine_gradientmode.Res));
            bindsSer.Add(typeof(UnityEngine.Gradient),new Action<Writer,object>(Ser_unityengine_gradient.Ser));
            bindsRes.Add(typeof(UnityEngine.Gradient),new Func<Reader,object,object>(Ser_unityengine_gradient.Res));
            bindsSer.Add(typeof(UnityEngine.OcclusionArea),new Action<Writer,object>(Ser_unityengine_occlusionarea.Ser));
            bindsRes.Add(typeof(UnityEngine.OcclusionArea),new Func<Reader,object,object>(Ser_unityengine_occlusionarea.Res));
            bindsSer.Add(typeof(UnityEngine.OcclusionPortal),new Action<Writer,object>(Ser_unityengine_occlusionportal.Ser));
            bindsRes.Add(typeof(UnityEngine.OcclusionPortal),new Func<Reader,object,object>(Ser_unityengine_occlusionportal.Res));
            bindsSer.Add(typeof(UnityEngine.RenderSettings),new Action<Writer,object>(Ser_unityengine_rendersettings.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderSettings),new Func<Reader,object,object>(Ser_unityengine_rendersettings.Res));
            bindsSer.Add(typeof(UnityEngine.QualitySettings),new Action<Writer,object>(Ser_unityengine_qualitysettings.Ser));
            bindsRes.Add(typeof(UnityEngine.QualitySettings),new Func<Reader,object,object>(Ser_unityengine_qualitysettings.Res));
            bindsSer.Add(typeof(UnityEngine.MeshFilter),new Action<Writer,object>(Ser_unityengine_meshfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.MeshFilter),new Func<Reader,object,object>(Ser_unityengine_meshfilter.Res));
            bindsSer.Add(typeof(UnityEngine.SkinnedMeshRenderer),new Action<Writer,object>(Ser_unityengine_skinnedmeshrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.SkinnedMeshRenderer),new Func<Reader,object,object>(Ser_unityengine_skinnedmeshrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.Flare),new Action<Writer,object>(Ser_unityengine_flare.Ser));
            bindsRes.Add(typeof(UnityEngine.Flare),new Func<Reader,object,object>(Ser_unityengine_flare.Res));
            bindsSer.Add(typeof(UnityEngine.LensFlare),new Action<Writer,object>(Ser_unityengine_lensflare.Ser));
            bindsRes.Add(typeof(UnityEngine.LensFlare),new Func<Reader,object,object>(Ser_unityengine_lensflare.Res));
            bindsSer.Add(typeof(UnityEngine.Renderer),new Action<Writer,object>(Ser_unityengine_renderer.Ser));
            bindsRes.Add(typeof(UnityEngine.Renderer),new Func<Reader,object,object>(Ser_unityengine_renderer.Res));
            bindsSer.Add(typeof(UnityEngine.Projector),new Action<Writer,object>(Ser_unityengine_projector.Ser));
            bindsRes.Add(typeof(UnityEngine.Projector),new Func<Reader,object,object>(Ser_unityengine_projector.Res));
            bindsSer.Add(typeof(UnityEngine.Skybox),new Action<Writer,object>(Ser_unityengine_skybox.Ser));
            bindsRes.Add(typeof(UnityEngine.Skybox),new Func<Reader,object,object>(Ser_unityengine_skybox.Res));
            bindsSer.Add(typeof(UnityEngine.LineTextureMode),new Action<Writer,object>(Ser_unityengine_linetexturemode.Ser));
            bindsRes.Add(typeof(UnityEngine.LineTextureMode),new Func<Reader,object,object>(Ser_unityengine_linetexturemode.Res));
            bindsSer.Add(typeof(UnityEngine.LineAlignment),new Action<Writer,object>(Ser_unityengine_linealignment.Ser));
            bindsRes.Add(typeof(UnityEngine.LineAlignment),new Func<Reader,object,object>(Ser_unityengine_linealignment.Res));
            bindsSer.Add(typeof(UnityEngine.TrailRenderer),new Action<Writer,object>(Ser_unityengine_trailrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.TrailRenderer),new Func<Reader,object,object>(Ser_unityengine_trailrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.LineRenderer),new Action<Writer,object>(Ser_unityengine_linerenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.LineRenderer),new Func<Reader,object,object>(Ser_unityengine_linerenderer.Res));
            bindsSer.Add(typeof(UnityEngine.LightmapData),new Action<Writer,object>(Ser_unityengine_lightmapdata.Ser));
            bindsRes.Add(typeof(UnityEngine.LightmapData),new Func<Reader,object,object>(Ser_unityengine_lightmapdata.Res));
            bindsSer.Add(typeof(UnityEngine.LightmapsModeLegacy),new Action<Writer,object>(Ser_unityengine_lightmapsmodelegacy.Ser));
            bindsRes.Add(typeof(UnityEngine.LightmapsModeLegacy),new Func<Reader,object,object>(Ser_unityengine_lightmapsmodelegacy.Res));
            bindsSer.Add(typeof(UnityEngine.MotionVectorGenerationMode),new Action<Writer,object>(Ser_unityengine_motionvectorgenerationmode.Ser));
            bindsRes.Add(typeof(UnityEngine.MotionVectorGenerationMode),new Func<Reader,object,object>(Ser_unityengine_motionvectorgenerationmode.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbes),new Action<Writer,object>(Ser_unityengine_lightprobes.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbes),new Func<Reader,object,object>(Ser_unityengine_lightprobes.Res));
            bindsSer.Add(typeof(UnityEngine.LightmapSettings),new Action<Writer,object>(Ser_unityengine_lightmapsettings.Ser));
            bindsRes.Add(typeof(UnityEngine.LightmapSettings),new Func<Reader,object,object>(Ser_unityengine_lightmapsettings.Res));
            bindsSer.Add(typeof(UnityEngine.MeshRenderer),new Action<Writer,object>(Ser_unityengine_meshrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.MeshRenderer),new Func<Reader,object,object>(Ser_unityengine_meshrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.RectOffset),new Action<Writer,object>(Ser_unityengine_rectoffset.Ser));
            bindsRes.Add(typeof(UnityEngine.RectOffset),new Func<Reader,object,object>(Ser_unityengine_rectoffset.Res));
            bindsSer.Add(typeof(UnityEngine.TouchPhase),new Action<Writer,object>(Ser_unityengine_touchphase.Ser));
            bindsRes.Add(typeof(UnityEngine.TouchPhase),new Func<Reader,object,object>(Ser_unityengine_touchphase.Res));
            bindsSer.Add(typeof(UnityEngine.IMECompositionMode),new Action<Writer,object>(Ser_unityengine_imecompositionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.IMECompositionMode),new Func<Reader,object,object>(Ser_unityengine_imecompositionmode.Res));
            bindsSer.Add(typeof(UnityEngine.TouchType),new Action<Writer,object>(Ser_unityengine_touchtype.Ser));
            bindsRes.Add(typeof(UnityEngine.TouchType),new Func<Reader,object,object>(Ser_unityengine_touchtype.Res));
            bindsSer.Add(typeof(UnityEngine.Touch),new Action<Writer,object>(Ser_unityengine_touch.Ser));
            bindsRes.Add(typeof(UnityEngine.Touch),new Func<Reader,object,object>(Ser_unityengine_touch.Res));
            bindsSer.Add(typeof(UnityEngine.DeviceOrientation),new Action<Writer,object>(Ser_unityengine_deviceorientation.Ser));
            bindsRes.Add(typeof(UnityEngine.DeviceOrientation),new Func<Reader,object,object>(Ser_unityengine_deviceorientation.Res));
            bindsSer.Add(typeof(UnityEngine.LocationServiceStatus),new Action<Writer,object>(Ser_unityengine_locationservicestatus.Ser));
            bindsRes.Add(typeof(UnityEngine.LocationServiceStatus),new Func<Reader,object,object>(Ser_unityengine_locationservicestatus.Res));
            bindsSer.Add(typeof(UnityEngine.Compass),new Action<Writer,object>(Ser_unityengine_compass.Ser));
            bindsRes.Add(typeof(UnityEngine.Compass),new Func<Reader,object,object>(Ser_unityengine_compass.Res));
            bindsSer.Add(typeof(UnityEngine.LayerMask),new Action<Writer,object>(Ser_unityengine_layermask.Ser));
            bindsRes.Add(typeof(UnityEngine.LayerMask),new Func<Reader,object,object>(Ser_unityengine_layermask.Res));
            bindsSer.Add(typeof(UnityEngine.Light),new Action<Writer,object>(Ser_unityengine_light.Ser));
            bindsRes.Add(typeof(UnityEngine.Light),new Func<Reader,object,object>(Ser_unityengine_light.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeGroup),new Action<Writer,object>(Ser_unityengine_lightprobegroup.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeGroup),new Func<Reader,object,object>(Ser_unityengine_lightprobegroup.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeProxyVolume),new Action<Writer,object>(Ser_unityengine_lightprobeproxyvolume.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeProxyVolume),new Func<Reader,object,object>(Ser_unityengine_lightprobeproxyvolume.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeProxyVolume.ResolutionMode),new Action<Writer,object>(Ser_unityengine_lightprobeproxyvolume_resolutionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeProxyVolume.ResolutionMode),new Func<Reader,object,object>(Ser_unityengine_lightprobeproxyvolume_resolutionmode.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeProxyVolume.BoundingBoxMode),new Action<Writer,object>(Ser_unityengine_lightprobeproxyvolume_boundingboxmode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeProxyVolume.BoundingBoxMode),new Func<Reader,object,object>(Ser_unityengine_lightprobeproxyvolume_boundingboxmode.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeProxyVolume.ProbePositionMode),new Action<Writer,object>(Ser_unityengine_lightprobeproxyvolume_probepositionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeProxyVolume.ProbePositionMode),new Func<Reader,object,object>(Ser_unityengine_lightprobeproxyvolume_probepositionmode.Res));
            bindsSer.Add(typeof(UnityEngine.LightProbeProxyVolume.RefreshMode),new Action<Writer,object>(Ser_unityengine_lightprobeproxyvolume_refreshmode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightProbeProxyVolume.RefreshMode),new Func<Reader,object,object>(Ser_unityengine_lightprobeproxyvolume_refreshmode.Res));
            bindsSer.Add(typeof(UnityEngine.LODFadeMode),new Action<Writer,object>(Ser_unityengine_lodfademode.Ser));
            bindsRes.Add(typeof(UnityEngine.LODFadeMode),new Func<Reader,object,object>(Ser_unityengine_lodfademode.Res));
            bindsSer.Add(typeof(UnityEngine.LOD),new Action<Writer,object>(Ser_unityengine_lod.Ser));
            bindsRes.Add(typeof(UnityEngine.LOD),new Func<Reader,object,object>(Ser_unityengine_lod.Res));
            bindsSer.Add(typeof(UnityEngine.LODGroup),new Action<Writer,object>(Ser_unityengine_lodgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.LODGroup),new Func<Reader,object,object>(Ser_unityengine_lodgroup.Res));
            bindsSer.Add(typeof(UnityEngine.Vector3),new Action<Writer,object>(Ser_unityengine_vector3.Ser));
            bindsRes.Add(typeof(UnityEngine.Vector3),new Func<Reader,object,object>(Ser_unityengine_vector3.Res));
            bindsSer.Add(typeof(UnityEngine.Quaternion),new Action<Writer,object>(Ser_unityengine_quaternion.Ser));
            bindsRes.Add(typeof(UnityEngine.Quaternion),new Func<Reader,object,object>(Ser_unityengine_quaternion.Res));
            bindsSer.Add(typeof(UnityEngine.Matrix4x4),new Action<Writer,object>(Ser_unityengine_matrix4x4.Ser));
            bindsRes.Add(typeof(UnityEngine.Matrix4x4),new Func<Reader,object,object>(Ser_unityengine_matrix4x4.Res));
            bindsSer.Add(typeof(UnityEngine.Bounds),new Action<Writer,object>(Ser_unityengine_bounds.Ser));
            bindsRes.Add(typeof(UnityEngine.Bounds),new Func<Reader,object,object>(Ser_unityengine_bounds.Res));
            bindsSer.Add(typeof(UnityEngine.Keyframe),new Action<Writer,object>(Ser_unityengine_keyframe.Ser));
            bindsRes.Add(typeof(UnityEngine.Keyframe),new Func<Reader,object,object>(Ser_unityengine_keyframe.Res));
            bindsSer.Add(typeof(UnityEngine.WrapMode),new Action<Writer,object>(Ser_unityengine_wrapmode.Ser));
            bindsRes.Add(typeof(UnityEngine.WrapMode),new Func<Reader,object,object>(Ser_unityengine_wrapmode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationCurve),new Action<Writer,object>(Ser_unityengine_animationcurve.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationCurve),new Func<Reader,object,object>(Ser_unityengine_animationcurve.Res));
            bindsSer.Add(typeof(UnityEngine.Mesh),new Action<Writer,object>(Ser_unityengine_mesh.Ser));
            bindsRes.Add(typeof(UnityEngine.Mesh),new Func<Reader,object,object>(Ser_unityengine_mesh.Res));
            bindsSer.Add(typeof(UnityEngine.MonoBehaviour),new Action<Writer,object>(Ser_unityengine_monobehaviour.Ser));
            bindsRes.Add(typeof(UnityEngine.MonoBehaviour),new Func<Reader,object,object>(Ser_unityengine_monobehaviour.Res));
            bindsSer.Add(typeof(UnityEngine.RPCMode),new Action<Writer,object>(Ser_unityengine_rpcmode.Ser));
            bindsRes.Add(typeof(UnityEngine.RPCMode),new Func<Reader,object,object>(Ser_unityengine_rpcmode.Res));
            bindsSer.Add(typeof(UnityEngine.ConnectionTesterStatus),new Action<Writer,object>(Ser_unityengine_connectiontesterstatus.Ser));
            bindsRes.Add(typeof(UnityEngine.ConnectionTesterStatus),new Func<Reader,object,object>(Ser_unityengine_connectiontesterstatus.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkConnectionError),new Action<Writer,object>(Ser_unityengine_networkconnectionerror.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkConnectionError),new Func<Reader,object,object>(Ser_unityengine_networkconnectionerror.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkDisconnection),new Action<Writer,object>(Ser_unityengine_networkdisconnection.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkDisconnection),new Func<Reader,object,object>(Ser_unityengine_networkdisconnection.Res));
            bindsSer.Add(typeof(UnityEngine.MasterServerEvent),new Action<Writer,object>(Ser_unityengine_masterserverevent.Ser));
            bindsRes.Add(typeof(UnityEngine.MasterServerEvent),new Func<Reader,object,object>(Ser_unityengine_masterserverevent.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkStateSynchronization),new Action<Writer,object>(Ser_unityengine_networkstatesynchronization.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkStateSynchronization),new Func<Reader,object,object>(Ser_unityengine_networkstatesynchronization.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkPeerType),new Action<Writer,object>(Ser_unityengine_networkpeertype.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkPeerType),new Func<Reader,object,object>(Ser_unityengine_networkpeertype.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkLogLevel),new Action<Writer,object>(Ser_unityengine_networkloglevel.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkLogLevel),new Func<Reader,object,object>(Ser_unityengine_networkloglevel.Res));
            bindsSer.Add(typeof(UnityEngine.NetworkView),new Action<Writer,object>(Ser_unityengine_networkview.Ser));
            bindsRes.Add(typeof(UnityEngine.NetworkView),new Func<Reader,object,object>(Ser_unityengine_networkview.Res));
            bindsSer.Add(typeof(UnityEngine.HostData),new Action<Writer,object>(Ser_unityengine_hostdata.Ser));
            bindsRes.Add(typeof(UnityEngine.HostData),new Func<Reader,object,object>(Ser_unityengine_hostdata.Res));
            bindsSer.Add(typeof(UnityEngine.ReflectionProbe),new Action<Writer,object>(Ser_unityengine_reflectionprobe.Ser));
            bindsRes.Add(typeof(UnityEngine.ReflectionProbe),new Func<Reader,object,object>(Ser_unityengine_reflectionprobe.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.GraphicsSettings),new Action<Writer,object>(Ser_unityengine_rendering_graphicssettings.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.GraphicsSettings),new Func<Reader,object,object>(Ser_unityengine_rendering_graphicssettings.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CommandBuffer),new Action<Writer,object>(Ser_unityengine_rendering_commandbuffer.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CommandBuffer),new Func<Reader,object,object>(Ser_unityengine_rendering_commandbuffer.Res));
            bindsSer.Add(typeof(UnityEngine.ResourceRequest),new Action<Writer,object>(Ser_unityengine_resourcerequest.Ser));
            bindsRes.Add(typeof(UnityEngine.ResourceRequest),new Func<Reader,object,object>(Ser_unityengine_resourcerequest.Res));
            bindsSer.Add(typeof(UnityEngine.Shader),new Action<Writer,object>(Ser_unityengine_shader.Ser));
            bindsRes.Add(typeof(UnityEngine.Shader),new Func<Reader,object,object>(Ser_unityengine_shader.Res));
            bindsSer.Add(typeof(UnityEngine.Material),new Action<Writer,object>(Ser_unityengine_material.Ser));
            bindsRes.Add(typeof(UnityEngine.Material),new Func<Reader,object,object>(Ser_unityengine_material.Res));
            bindsSer.Add(typeof(UnityEngine.ShaderVariantCollection),new Action<Writer,object>(Ser_unityengine_shadervariantcollection.Ser));
            bindsRes.Add(typeof(UnityEngine.ShaderVariantCollection),new Func<Reader,object,object>(Ser_unityengine_shadervariantcollection.Res));
            bindsSer.Add(typeof(UnityEngine.ShaderVariantCollection.ShaderVariant),new Action<Writer,object>(Ser_unityengine_shadervariantcollection_shadervariant.Ser));
            bindsRes.Add(typeof(UnityEngine.ShaderVariantCollection.ShaderVariant),new Func<Reader,object,object>(Ser_unityengine_shadervariantcollection_shadervariant.Res));
            bindsSer.Add(typeof(UnityEngine.SpriteAlignment),new Action<Writer,object>(Ser_unityengine_spritealignment.Ser));
            bindsRes.Add(typeof(UnityEngine.SpriteAlignment),new Func<Reader,object,object>(Ser_unityengine_spritealignment.Res));
            bindsSer.Add(typeof(UnityEngine.SpritePackingMode),new Action<Writer,object>(Ser_unityengine_spritepackingmode.Ser));
            bindsRes.Add(typeof(UnityEngine.SpritePackingMode),new Func<Reader,object,object>(Ser_unityengine_spritepackingmode.Res));
            bindsSer.Add(typeof(UnityEngine.SpritePackingRotation),new Action<Writer,object>(Ser_unityengine_spritepackingrotation.Ser));
            bindsRes.Add(typeof(UnityEngine.SpritePackingRotation),new Func<Reader,object,object>(Ser_unityengine_spritepackingrotation.Res));
            bindsSer.Add(typeof(UnityEngine.SpriteMeshType),new Action<Writer,object>(Ser_unityengine_spritemeshtype.Ser));
            bindsRes.Add(typeof(UnityEngine.SpriteMeshType),new Func<Reader,object,object>(Ser_unityengine_spritemeshtype.Res));
            bindsSer.Add(typeof(UnityEngine.SpriteDrawMode),new Action<Writer,object>(Ser_unityengine_spritedrawmode.Ser));
            bindsRes.Add(typeof(UnityEngine.SpriteDrawMode),new Func<Reader,object,object>(Ser_unityengine_spritedrawmode.Res));
            bindsSer.Add(typeof(UnityEngine.SpriteTileMode),new Action<Writer,object>(Ser_unityengine_spritetilemode.Ser));
            bindsRes.Add(typeof(UnityEngine.SpriteTileMode),new Func<Reader,object,object>(Ser_unityengine_spritetilemode.Res));
            bindsSer.Add(typeof(UnityEngine.Sprite),new Action<Writer,object>(Ser_unityengine_sprite.Ser));
            bindsRes.Add(typeof(UnityEngine.Sprite),new Func<Reader,object,object>(Ser_unityengine_sprite.Res));
            bindsSer.Add(typeof(UnityEngine.SpriteRenderer),new Action<Writer,object>(Ser_unityengine_spriterenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.SpriteRenderer),new Func<Reader,object,object>(Ser_unityengine_spriterenderer.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralProcessorUsage),new Action<Writer,object>(Ser_unityengine_proceduralprocessorusage.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralProcessorUsage),new Func<Reader,object,object>(Ser_unityengine_proceduralprocessorusage.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralCacheSize),new Action<Writer,object>(Ser_unityengine_proceduralcachesize.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralCacheSize),new Func<Reader,object,object>(Ser_unityengine_proceduralcachesize.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralLoadingBehavior),new Action<Writer,object>(Ser_unityengine_proceduralloadingbehavior.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralLoadingBehavior),new Func<Reader,object,object>(Ser_unityengine_proceduralloadingbehavior.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralPropertyType),new Action<Writer,object>(Ser_unityengine_proceduralpropertytype.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralPropertyType),new Func<Reader,object,object>(Ser_unityengine_proceduralpropertytype.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralOutputType),new Action<Writer,object>(Ser_unityengine_proceduraloutputtype.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralOutputType),new Func<Reader,object,object>(Ser_unityengine_proceduraloutputtype.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralPropertyDescription),new Action<Writer,object>(Ser_unityengine_proceduralpropertydescription.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralPropertyDescription),new Func<Reader,object,object>(Ser_unityengine_proceduralpropertydescription.Res));
            bindsSer.Add(typeof(UnityEngine.ProceduralTexture),new Action<Writer,object>(Ser_unityengine_proceduraltexture.Ser));
            bindsRes.Add(typeof(UnityEngine.ProceduralTexture),new Func<Reader,object,object>(Ser_unityengine_proceduraltexture.Res));
            bindsSer.Add(typeof(UnityEngine.TextAsset),new Action<Writer,object>(Ser_unityengine_textasset.Ser));
            bindsRes.Add(typeof(UnityEngine.TextAsset),new Func<Reader,object,object>(Ser_unityengine_textasset.Res));
            bindsSer.Add(typeof(UnityEngine.Texture),new Action<Writer,object>(Ser_unityengine_texture.Ser));
            bindsRes.Add(typeof(UnityEngine.Texture),new Func<Reader,object,object>(Ser_unityengine_texture.Res));
            bindsSer.Add(typeof(UnityEngine.Texture2D),new Action<Writer,object>(Ser_unityengine_texture2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Texture2D),new Func<Reader,object,object>(Ser_unityengine_texture2d.Res));
            bindsSer.Add(typeof(UnityEngine.Texture2D.EXRFlags),new Action<Writer,object>(Ser_unityengine_texture2d_exrflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Texture2D.EXRFlags),new Func<Reader,object,object>(Ser_unityengine_texture2d_exrflags.Res));
            bindsSer.Add(typeof(UnityEngine.Cubemap),new Action<Writer,object>(Ser_unityengine_cubemap.Ser));
            bindsRes.Add(typeof(UnityEngine.Cubemap),new Func<Reader,object,object>(Ser_unityengine_cubemap.Res));
            bindsSer.Add(typeof(UnityEngine.Texture3D),new Action<Writer,object>(Ser_unityengine_texture3d.Ser));
            bindsRes.Add(typeof(UnityEngine.Texture3D),new Func<Reader,object,object>(Ser_unityengine_texture3d.Res));
            bindsSer.Add(typeof(UnityEngine.SparseTexture),new Action<Writer,object>(Ser_unityengine_sparsetexture.Ser));
            bindsRes.Add(typeof(UnityEngine.SparseTexture),new Func<Reader,object,object>(Ser_unityengine_sparsetexture.Res));
            bindsSer.Add(typeof(UnityEngine.RenderTexture),new Action<Writer,object>(Ser_unityengine_rendertexture.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderTexture),new Func<Reader,object,object>(Ser_unityengine_rendertexture.Res));
            bindsSer.Add(typeof(UnityEngine.HideFlags),new Action<Writer,object>(Ser_unityengine_hideflags.Ser));
            bindsRes.Add(typeof(UnityEngine.HideFlags),new Func<Reader,object,object>(Ser_unityengine_hideflags.Res));
            bindsSer.Add(typeof(UnityEngine.Object),new Action<Writer,object>(Ser_unityengine_object.Ser));
            bindsRes.Add(typeof(UnityEngine.Object),new Func<Reader,object,object>(Ser_unityengine_object.Res));
            bindsSer.Add(typeof(UnityEngine.AudioType),new Action<Writer,object>(Ser_unityengine_audiotype.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioType),new Func<Reader,object,object>(Ser_unityengine_audiotype.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.PlayState),new Action<Writer,object>(Ser_unityengine_experimental_director_playstate.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.PlayState),new Func<Reader,object,object>(Ser_unityengine_experimental_director_playstate.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.PlayableHandle),new Action<Writer,object>(Ser_unityengine_experimental_director_playablehandle.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.PlayableHandle),new Func<Reader,object,object>(Ser_unityengine_experimental_director_playablehandle.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.Playable),new Action<Writer,object>(Ser_unityengine_experimental_director_playable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.Playable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_playable.Res));
            bindsSer.Add(typeof(UnityEngineInternal.LightmapType),new Action<Writer,object>(Ser_unityengineinternal_lightmaptype.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.LightmapType),new Func<Reader,object,object>(Ser_unityengineinternal_lightmaptype.Res));
            bindsSer.Add(typeof(UnityEngineInternal.GITextureType),new Action<Writer,object>(Ser_unityengineinternal_gitexturetype.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.GITextureType),new Func<Reader,object,object>(Ser_unityengineinternal_gitexturetype.Res));
            bindsSer.Add(typeof(UnityEngine.SceneManagement.LoadSceneMode),new Action<Writer,object>(Ser_unityengine_scenemanagement_loadscenemode.Ser));
            bindsRes.Add(typeof(UnityEngine.SceneManagement.LoadSceneMode),new Func<Reader,object,object>(Ser_unityengine_scenemanagement_loadscenemode.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.DictationRecognizer),new Action<Writer,object>(Ser_unityengine_windows_speech_dictationrecognizer.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.DictationRecognizer),new Func<Reader,object,object>(Ser_unityengine_windows_speech_dictationrecognizer.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererSettings),new Action<Writer,object>(Ser_unityengine_experimental_rendering_drawrenderersettings.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererSettings),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_drawrenderersettings.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.VisibleLight),new Action<Writer,object>(Ser_unityengine_experimental_rendering_visiblelight.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.VisibleLight),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_visiblelight.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.VisibleReflectionProbe),new Action<Writer,object>(Ser_unityengine_experimental_rendering_visiblereflectionprobe.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.VisibleReflectionProbe),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_visiblereflectionprobe.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.CullResults),new Action<Writer,object>(Ser_unityengine_experimental_rendering_cullresults.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.CullResults),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_cullresults.Res));
            bindsSer.Add(typeof(UnityEngine.WindZoneMode),new Action<Writer,object>(Ser_unityengine_windzonemode.Ser));
            bindsRes.Add(typeof(UnityEngine.WindZoneMode),new Func<Reader,object,object>(Ser_unityengine_windzonemode.Res));
            bindsSer.Add(typeof(UnityEngine.WindZone),new Action<Writer,object>(Ser_unityengine_windzone.Ser));
            bindsRes.Add(typeof(UnityEngine.WindZone),new Func<Reader,object,object>(Ser_unityengine_windzone.Res));
            bindsSer.Add(typeof(UnityEngine.Transform),new Action<Writer,object>(Ser_unityengine_transform.Ser));
            bindsRes.Add(typeof(UnityEngine.Transform),new Func<Reader,object,object>(Ser_unityengine_transform.Res));
            bindsSer.Add(typeof(UnityEngine.DrivenTransformProperties),new Action<Writer,object>(Ser_unityengine_driventransformproperties.Ser));
            bindsRes.Add(typeof(UnityEngine.DrivenTransformProperties),new Func<Reader,object,object>(Ser_unityengine_driventransformproperties.Res));
            bindsSer.Add(typeof(UnityEngine.RectTransform),new Action<Writer,object>(Ser_unityengine_recttransform.Ser));
            bindsRes.Add(typeof(UnityEngine.RectTransform),new Func<Reader,object,object>(Ser_unityengine_recttransform.Res));
            bindsSer.Add(typeof(UnityEngine.RectTransform.Edge),new Action<Writer,object>(Ser_unityengine_recttransform_edge.Ser));
            bindsRes.Add(typeof(UnityEngine.RectTransform.Edge),new Func<Reader,object,object>(Ser_unityengine_recttransform_edge.Res));
            bindsSer.Add(typeof(UnityEngine.RectTransform.Axis),new Action<Writer,object>(Ser_unityengine_recttransform_axis.Ser));
            bindsRes.Add(typeof(UnityEngine.RectTransform.Axis),new Func<Reader,object,object>(Ser_unityengine_recttransform_axis.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.SortingGroup),new Action<Writer,object>(Ser_unityengine_rendering_sortinggroup.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.SortingGroup),new Func<Reader,object,object>(Ser_unityengine_rendering_sortinggroup.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem),new Action<Writer,object>(Ser_unityengine_particlesystem.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem),new Func<Reader,object,object>(Ser_unityengine_particlesystem.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.Burst),new Action<Writer,object>(Ser_unityengine_particlesystem_burst.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.Burst),new Func<Reader,object,object>(Ser_unityengine_particlesystem_burst.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.MinMaxCurve),new Action<Writer,object>(Ser_unityengine_particlesystem_minmaxcurve.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.MinMaxCurve),new Func<Reader,object,object>(Ser_unityengine_particlesystem_minmaxcurve.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.MinMaxGradient),new Action<Writer,object>(Ser_unityengine_particlesystem_minmaxgradient.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.MinMaxGradient),new Func<Reader,object,object>(Ser_unityengine_particlesystem_minmaxgradient.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.MainModule),new Action<Writer,object>(Ser_unityengine_particlesystem_mainmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.MainModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_mainmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.EmissionModule),new Action<Writer,object>(Ser_unityengine_particlesystem_emissionmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.EmissionModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_emissionmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.ShapeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_shapemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.ShapeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_shapemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_velocityoverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_velocityoverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_limitvelocityoverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_limitvelocityoverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.InheritVelocityModule),new Action<Writer,object>(Ser_unityengine_particlesystem_inheritvelocitymodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.InheritVelocityModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_inheritvelocitymodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_forceoverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_forceoverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_coloroverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_coloroverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule),new Action<Writer,object>(Ser_unityengine_particlesystem_colorbyspeedmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_colorbyspeedmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_sizeoverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_sizeoverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule),new Action<Writer,object>(Ser_unityengine_particlesystem_sizebyspeedmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_sizebyspeedmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule),new Action<Writer,object>(Ser_unityengine_particlesystem_rotationoverlifetimemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_rotationoverlifetimemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule),new Action<Writer,object>(Ser_unityengine_particlesystem_rotationbyspeedmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_rotationbyspeedmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.ExternalForcesModule),new Action<Writer,object>(Ser_unityengine_particlesystem_externalforcesmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.ExternalForcesModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_externalforcesmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.NoiseModule),new Action<Writer,object>(Ser_unityengine_particlesystem_noisemodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.NoiseModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_noisemodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.CollisionModule),new Action<Writer,object>(Ser_unityengine_particlesystem_collisionmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.CollisionModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_collisionmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.TriggerModule),new Action<Writer,object>(Ser_unityengine_particlesystem_triggermodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.TriggerModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_triggermodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.SubEmittersModule),new Action<Writer,object>(Ser_unityengine_particlesystem_subemittersmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.SubEmittersModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_subemittersmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule),new Action<Writer,object>(Ser_unityengine_particlesystem_texturesheetanimationmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_texturesheetanimationmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.LightsModule),new Action<Writer,object>(Ser_unityengine_particlesystem_lightsmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.LightsModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_lightsmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.TrailModule),new Action<Writer,object>(Ser_unityengine_particlesystem_trailmodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.TrailModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_trailmodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.CustomDataModule),new Action<Writer,object>(Ser_unityengine_particlesystem_customdatamodule.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.CustomDataModule),new Func<Reader,object,object>(Ser_unityengine_particlesystem_customdatamodule.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.Particle),new Action<Writer,object>(Ser_unityengine_particlesystem_particle.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.Particle),new Func<Reader,object,object>(Ser_unityengine_particlesystem_particle.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystem.EmitParams),new Action<Writer,object>(Ser_unityengine_particlesystem_emitparams.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystem.EmitParams),new Func<Reader,object,object>(Ser_unityengine_particlesystem_emitparams.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.UVChannelFlags),new Action<Writer,object>(Ser_unityengine_rendering_uvchannelflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.UVChannelFlags),new Func<Reader,object,object>(Ser_unityengine_rendering_uvchannelflags.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemRenderMode),new Action<Writer,object>(Ser_unityengine_particlesystemrendermode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemRenderMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemrendermode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemSortMode),new Action<Writer,object>(Ser_unityengine_particlesystemsortmode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemSortMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemsortmode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCollisionQuality),new Action<Writer,object>(Ser_unityengine_particlesystemcollisionquality.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCollisionQuality),new Func<Reader,object,object>(Ser_unityengine_particlesystemcollisionquality.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemRenderSpace),new Action<Writer,object>(Ser_unityengine_particlesystemrenderspace.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemRenderSpace),new Func<Reader,object,object>(Ser_unityengine_particlesystemrenderspace.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCurveMode),new Action<Writer,object>(Ser_unityengine_particlesystemcurvemode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCurveMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemcurvemode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemGradientMode),new Action<Writer,object>(Ser_unityengine_particlesystemgradientmode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemGradientMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemgradientmode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemShapeType),new Action<Writer,object>(Ser_unityengine_particlesystemshapetype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemShapeType),new Func<Reader,object,object>(Ser_unityengine_particlesystemshapetype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemMeshShapeType),new Action<Writer,object>(Ser_unityengine_particlesystemmeshshapetype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemMeshShapeType),new Func<Reader,object,object>(Ser_unityengine_particlesystemmeshshapetype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemAnimationType),new Action<Writer,object>(Ser_unityengine_particlesystemanimationtype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemAnimationType),new Func<Reader,object,object>(Ser_unityengine_particlesystemanimationtype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCollisionType),new Action<Writer,object>(Ser_unityengine_particlesystemcollisiontype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCollisionType),new Func<Reader,object,object>(Ser_unityengine_particlesystemcollisiontype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCollisionMode),new Action<Writer,object>(Ser_unityengine_particlesystemcollisionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCollisionMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemcollisionmode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemOverlapAction),new Action<Writer,object>(Ser_unityengine_particlesystemoverlapaction.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemOverlapAction),new Func<Reader,object,object>(Ser_unityengine_particlesystemoverlapaction.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemSimulationSpace),new Action<Writer,object>(Ser_unityengine_particlesystemsimulationspace.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemSimulationSpace),new Func<Reader,object,object>(Ser_unityengine_particlesystemsimulationspace.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemStopBehavior),new Action<Writer,object>(Ser_unityengine_particlesystemstopbehavior.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemStopBehavior),new Func<Reader,object,object>(Ser_unityengine_particlesystemstopbehavior.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemScalingMode),new Action<Writer,object>(Ser_unityengine_particlesystemscalingmode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemScalingMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemscalingmode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemInheritVelocityMode),new Action<Writer,object>(Ser_unityengine_particlesysteminheritvelocitymode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemInheritVelocityMode),new Func<Reader,object,object>(Ser_unityengine_particlesysteminheritvelocitymode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemTriggerEventType),new Action<Writer,object>(Ser_unityengine_particlesystemtriggereventtype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemTriggerEventType),new Func<Reader,object,object>(Ser_unityengine_particlesystemtriggereventtype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemVertexStream),new Action<Writer,object>(Ser_unityengine_particlesystemvertexstream.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemVertexStream),new Func<Reader,object,object>(Ser_unityengine_particlesystemvertexstream.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCustomData),new Action<Writer,object>(Ser_unityengine_particlesystemcustomdata.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCustomData),new Func<Reader,object,object>(Ser_unityengine_particlesystemcustomdata.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemCustomDataMode),new Action<Writer,object>(Ser_unityengine_particlesystemcustomdatamode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemCustomDataMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemcustomdatamode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemNoiseQuality),new Action<Writer,object>(Ser_unityengine_particlesystemnoisequality.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemNoiseQuality),new Func<Reader,object,object>(Ser_unityengine_particlesystemnoisequality.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemSubEmitterType),new Action<Writer,object>(Ser_unityengine_particlesystemsubemittertype.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemSubEmitterType),new Func<Reader,object,object>(Ser_unityengine_particlesystemsubemittertype.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemSubEmitterProperties),new Action<Writer,object>(Ser_unityengine_particlesystemsubemitterproperties.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemSubEmitterProperties),new Func<Reader,object,object>(Ser_unityengine_particlesystemsubemitterproperties.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemTrailTextureMode),new Action<Writer,object>(Ser_unityengine_particlesystemtrailtexturemode.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemTrailTextureMode),new Func<Reader,object,object>(Ser_unityengine_particlesystemtrailtexturemode.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemShapeMultiModeValue),new Action<Writer,object>(Ser_unityengine_particlesystemshapemultimodevalue.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemShapeMultiModeValue),new Func<Reader,object,object>(Ser_unityengine_particlesystemshapemultimodevalue.Res));
            bindsSer.Add(typeof(UnityEngine.ParticleSystemRenderer),new Action<Writer,object>(Ser_unityengine_particlesystemrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.ParticleSystemRenderer),new Func<Reader,object,object>(Ser_unityengine_particlesystemrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodyConstraints),new Action<Writer,object>(Ser_unityengine_rigidbodyconstraints.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodyConstraints),new Func<Reader,object,object>(Ser_unityengine_rigidbodyconstraints.Res));
            bindsSer.Add(typeof(UnityEngine.ForceMode),new Action<Writer,object>(Ser_unityengine_forcemode.Ser));
            bindsRes.Add(typeof(UnityEngine.ForceMode),new Func<Reader,object,object>(Ser_unityengine_forcemode.Res));
            bindsSer.Add(typeof(UnityEngine.JointProjectionMode),new Action<Writer,object>(Ser_unityengine_jointprojectionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.JointProjectionMode),new Func<Reader,object,object>(Ser_unityengine_jointprojectionmode.Res));
            bindsSer.Add(typeof(UnityEngine.WheelFrictionCurve),new Action<Writer,object>(Ser_unityengine_wheelfrictioncurve.Ser));
            bindsRes.Add(typeof(UnityEngine.WheelFrictionCurve),new Func<Reader,object,object>(Ser_unityengine_wheelfrictioncurve.Res));
            bindsSer.Add(typeof(UnityEngine.SoftJointLimit),new Action<Writer,object>(Ser_unityengine_softjointlimit.Ser));
            bindsRes.Add(typeof(UnityEngine.SoftJointLimit),new Func<Reader,object,object>(Ser_unityengine_softjointlimit.Res));
            bindsSer.Add(typeof(UnityEngine.SoftJointLimitSpring),new Action<Writer,object>(Ser_unityengine_softjointlimitspring.Ser));
            bindsRes.Add(typeof(UnityEngine.SoftJointLimitSpring),new Func<Reader,object,object>(Ser_unityengine_softjointlimitspring.Res));
            bindsSer.Add(typeof(UnityEngine.JointDrive),new Action<Writer,object>(Ser_unityengine_jointdrive.Ser));
            bindsRes.Add(typeof(UnityEngine.JointDrive),new Func<Reader,object,object>(Ser_unityengine_jointdrive.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodyInterpolation),new Action<Writer,object>(Ser_unityengine_rigidbodyinterpolation.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodyInterpolation),new Func<Reader,object,object>(Ser_unityengine_rigidbodyinterpolation.Res));
            bindsSer.Add(typeof(UnityEngine.JointMotor),new Action<Writer,object>(Ser_unityengine_jointmotor.Ser));
            bindsRes.Add(typeof(UnityEngine.JointMotor),new Func<Reader,object,object>(Ser_unityengine_jointmotor.Res));
            bindsSer.Add(typeof(UnityEngine.JointSpring),new Action<Writer,object>(Ser_unityengine_jointspring.Ser));
            bindsRes.Add(typeof(UnityEngine.JointSpring),new Func<Reader,object,object>(Ser_unityengine_jointspring.Res));
            bindsSer.Add(typeof(UnityEngine.JointLimits),new Action<Writer,object>(Ser_unityengine_jointlimits.Ser));
            bindsRes.Add(typeof(UnityEngine.JointLimits),new Func<Reader,object,object>(Ser_unityengine_jointlimits.Res));
            bindsSer.Add(typeof(UnityEngine.PhysicMaterialCombine),new Action<Writer,object>(Ser_unityengine_physicmaterialcombine.Ser));
            bindsRes.Add(typeof(UnityEngine.PhysicMaterialCombine),new Func<Reader,object,object>(Ser_unityengine_physicmaterialcombine.Res));
            bindsSer.Add(typeof(UnityEngine.CollisionFlags),new Action<Writer,object>(Ser_unityengine_collisionflags.Ser));
            bindsRes.Add(typeof(UnityEngine.CollisionFlags),new Func<Reader,object,object>(Ser_unityengine_collisionflags.Res));
            bindsSer.Add(typeof(UnityEngine.QueryTriggerInteraction),new Action<Writer,object>(Ser_unityengine_querytriggerinteraction.Ser));
            bindsRes.Add(typeof(UnityEngine.QueryTriggerInteraction),new Func<Reader,object,object>(Ser_unityengine_querytriggerinteraction.Res));
            bindsSer.Add(typeof(UnityEngine.Rigidbody),new Action<Writer,object>(Ser_unityengine_rigidbody.Ser));
            bindsRes.Add(typeof(UnityEngine.Rigidbody),new Func<Reader,object,object>(Ser_unityengine_rigidbody.Res));
            bindsSer.Add(typeof(UnityEngine.Joint),new Action<Writer,object>(Ser_unityengine_joint.Ser));
            bindsRes.Add(typeof(UnityEngine.Joint),new Func<Reader,object,object>(Ser_unityengine_joint.Res));
            bindsSer.Add(typeof(UnityEngine.HingeJoint),new Action<Writer,object>(Ser_unityengine_hingejoint.Ser));
            bindsRes.Add(typeof(UnityEngine.HingeJoint),new Func<Reader,object,object>(Ser_unityengine_hingejoint.Res));
            bindsSer.Add(typeof(UnityEngine.SpringJoint),new Action<Writer,object>(Ser_unityengine_springjoint.Ser));
            bindsRes.Add(typeof(UnityEngine.SpringJoint),new Func<Reader,object,object>(Ser_unityengine_springjoint.Res));
            bindsSer.Add(typeof(UnityEngine.FixedJoint),new Action<Writer,object>(Ser_unityengine_fixedjoint.Ser));
            bindsRes.Add(typeof(UnityEngine.FixedJoint),new Func<Reader,object,object>(Ser_unityengine_fixedjoint.Res));
            bindsSer.Add(typeof(UnityEngine.CharacterJoint),new Action<Writer,object>(Ser_unityengine_characterjoint.Ser));
            bindsRes.Add(typeof(UnityEngine.CharacterJoint),new Func<Reader,object,object>(Ser_unityengine_characterjoint.Res));
            bindsSer.Add(typeof(UnityEngine.ConfigurableJointMotion),new Action<Writer,object>(Ser_unityengine_configurablejointmotion.Ser));
            bindsRes.Add(typeof(UnityEngine.ConfigurableJointMotion),new Func<Reader,object,object>(Ser_unityengine_configurablejointmotion.Res));
            bindsSer.Add(typeof(UnityEngine.RotationDriveMode),new Action<Writer,object>(Ser_unityengine_rotationdrivemode.Ser));
            bindsRes.Add(typeof(UnityEngine.RotationDriveMode),new Func<Reader,object,object>(Ser_unityengine_rotationdrivemode.Res));
            bindsSer.Add(typeof(UnityEngine.ConfigurableJoint),new Action<Writer,object>(Ser_unityengine_configurablejoint.Ser));
            bindsRes.Add(typeof(UnityEngine.ConfigurableJoint),new Func<Reader,object,object>(Ser_unityengine_configurablejoint.Res));
            bindsSer.Add(typeof(UnityEngine.ConstantForce),new Action<Writer,object>(Ser_unityengine_constantforce.Ser));
            bindsRes.Add(typeof(UnityEngine.ConstantForce),new Func<Reader,object,object>(Ser_unityengine_constantforce.Res));
            bindsSer.Add(typeof(UnityEngine.CollisionDetectionMode),new Action<Writer,object>(Ser_unityengine_collisiondetectionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.CollisionDetectionMode),new Func<Reader,object,object>(Ser_unityengine_collisiondetectionmode.Res));
            bindsSer.Add(typeof(UnityEngine.Collider),new Action<Writer,object>(Ser_unityengine_collider.Ser));
            bindsRes.Add(typeof(UnityEngine.Collider),new Func<Reader,object,object>(Ser_unityengine_collider.Res));
            bindsSer.Add(typeof(UnityEngine.BoxCollider),new Action<Writer,object>(Ser_unityengine_boxcollider.Ser));
            bindsRes.Add(typeof(UnityEngine.BoxCollider),new Func<Reader,object,object>(Ser_unityengine_boxcollider.Res));
            bindsSer.Add(typeof(UnityEngine.SphereCollider),new Action<Writer,object>(Ser_unityengine_spherecollider.Ser));
            bindsRes.Add(typeof(UnityEngine.SphereCollider),new Func<Reader,object,object>(Ser_unityengine_spherecollider.Res));
            bindsSer.Add(typeof(UnityEngine.MeshCollider),new Action<Writer,object>(Ser_unityengine_meshcollider.Ser));
            bindsRes.Add(typeof(UnityEngine.MeshCollider),new Func<Reader,object,object>(Ser_unityengine_meshcollider.Res));
            bindsSer.Add(typeof(UnityEngine.CapsuleCollider),new Action<Writer,object>(Ser_unityengine_capsulecollider.Ser));
            bindsRes.Add(typeof(UnityEngine.CapsuleCollider),new Func<Reader,object,object>(Ser_unityengine_capsulecollider.Res));
            bindsSer.Add(typeof(UnityEngine.RaycastHit),new Action<Writer,object>(Ser_unityengine_raycasthit.Ser));
            bindsRes.Add(typeof(UnityEngine.RaycastHit),new Func<Reader,object,object>(Ser_unityengine_raycasthit.Res));
            bindsSer.Add(typeof(UnityEngine.PhysicMaterial),new Action<Writer,object>(Ser_unityengine_physicmaterial.Ser));
            bindsRes.Add(typeof(UnityEngine.PhysicMaterial),new Func<Reader,object,object>(Ser_unityengine_physicmaterial.Res));
            bindsSer.Add(typeof(UnityEngine.CharacterController),new Action<Writer,object>(Ser_unityengine_charactercontroller.Ser));
            bindsRes.Add(typeof(UnityEngine.CharacterController),new Func<Reader,object,object>(Ser_unityengine_charactercontroller.Res));
            bindsSer.Add(typeof(UnityEngine.RaycastHit2D),new Action<Writer,object>(Ser_unityengine_raycasthit2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RaycastHit2D),new Func<Reader,object,object>(Ser_unityengine_raycasthit2d.Res));
            bindsSer.Add(typeof(UnityEngine.CircleCollider2D),new Action<Writer,object>(Ser_unityengine_circlecollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.CircleCollider2D),new Func<Reader,object,object>(Ser_unityengine_circlecollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.BoxCollider2D),new Action<Writer,object>(Ser_unityengine_boxcollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.BoxCollider2D),new Func<Reader,object,object>(Ser_unityengine_boxcollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.Joint2D),new Action<Writer,object>(Ser_unityengine_joint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Joint2D),new Func<Reader,object,object>(Ser_unityengine_joint2d.Res));
            bindsSer.Add(typeof(UnityEngine.AreaEffector2D),new Action<Writer,object>(Ser_unityengine_areaeffector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.AreaEffector2D),new Func<Reader,object,object>(Ser_unityengine_areaeffector2d.Res));
            bindsSer.Add(typeof(UnityEngine.PlatformEffector2D),new Action<Writer,object>(Ser_unityengine_platformeffector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.PlatformEffector2D),new Func<Reader,object,object>(Ser_unityengine_platformeffector2d.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodyInterpolation2D),new Action<Writer,object>(Ser_unityengine_rigidbodyinterpolation2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodyInterpolation2D),new Func<Reader,object,object>(Ser_unityengine_rigidbodyinterpolation2d.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodySleepMode2D),new Action<Writer,object>(Ser_unityengine_rigidbodysleepmode2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodySleepMode2D),new Func<Reader,object,object>(Ser_unityengine_rigidbodysleepmode2d.Res));
            bindsSer.Add(typeof(UnityEngine.CollisionDetectionMode2D),new Action<Writer,object>(Ser_unityengine_collisiondetectionmode2d.Ser));
            bindsRes.Add(typeof(UnityEngine.CollisionDetectionMode2D),new Func<Reader,object,object>(Ser_unityengine_collisiondetectionmode2d.Res));
            bindsSer.Add(typeof(UnityEngine.ForceMode2D),new Action<Writer,object>(Ser_unityengine_forcemode2d.Ser));
            bindsRes.Add(typeof(UnityEngine.ForceMode2D),new Func<Reader,object,object>(Ser_unityengine_forcemode2d.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodyConstraints2D),new Action<Writer,object>(Ser_unityengine_rigidbodyconstraints2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodyConstraints2D),new Func<Reader,object,object>(Ser_unityengine_rigidbodyconstraints2d.Res));
            bindsSer.Add(typeof(UnityEngine.RigidbodyType2D),new Action<Writer,object>(Ser_unityengine_rigidbodytype2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RigidbodyType2D),new Func<Reader,object,object>(Ser_unityengine_rigidbodytype2d.Res));
            bindsSer.Add(typeof(UnityEngine.ContactFilter2D),new Action<Writer,object>(Ser_unityengine_contactfilter2d.Ser));
            bindsRes.Add(typeof(UnityEngine.ContactFilter2D),new Func<Reader,object,object>(Ser_unityengine_contactfilter2d.Res));
            bindsSer.Add(typeof(UnityEngine.Rigidbody2D),new Action<Writer,object>(Ser_unityengine_rigidbody2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Rigidbody2D),new Func<Reader,object,object>(Ser_unityengine_rigidbody2d.Res));
            bindsSer.Add(typeof(UnityEngine.Collider2D),new Action<Writer,object>(Ser_unityengine_collider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Collider2D),new Func<Reader,object,object>(Ser_unityengine_collider2d.Res));
            bindsSer.Add(typeof(UnityEngine.EdgeCollider2D),new Action<Writer,object>(Ser_unityengine_edgecollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.EdgeCollider2D),new Func<Reader,object,object>(Ser_unityengine_edgecollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.CapsuleDirection2D),new Action<Writer,object>(Ser_unityengine_capsuledirection2d.Ser));
            bindsRes.Add(typeof(UnityEngine.CapsuleDirection2D),new Func<Reader,object,object>(Ser_unityengine_capsuledirection2d.Res));
            bindsSer.Add(typeof(UnityEngine.CapsuleCollider2D),new Action<Writer,object>(Ser_unityengine_capsulecollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.CapsuleCollider2D),new Func<Reader,object,object>(Ser_unityengine_capsulecollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.CompositeCollider2D),new Action<Writer,object>(Ser_unityengine_compositecollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.CompositeCollider2D),new Func<Reader,object,object>(Ser_unityengine_compositecollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.CompositeCollider2D.GeometryType),new Action<Writer,object>(Ser_unityengine_compositecollider2d_geometrytype.Ser));
            bindsRes.Add(typeof(UnityEngine.CompositeCollider2D.GeometryType),new Func<Reader,object,object>(Ser_unityengine_compositecollider2d_geometrytype.Res));
            bindsSer.Add(typeof(UnityEngine.CompositeCollider2D.GenerationType),new Action<Writer,object>(Ser_unityengine_compositecollider2d_generationtype.Ser));
            bindsRes.Add(typeof(UnityEngine.CompositeCollider2D.GenerationType),new Func<Reader,object,object>(Ser_unityengine_compositecollider2d_generationtype.Res));
            bindsSer.Add(typeof(UnityEngine.PolygonCollider2D),new Action<Writer,object>(Ser_unityengine_polygoncollider2d.Ser));
            bindsRes.Add(typeof(UnityEngine.PolygonCollider2D),new Func<Reader,object,object>(Ser_unityengine_polygoncollider2d.Res));
            bindsSer.Add(typeof(UnityEngine.ColliderDistance2D),new Action<Writer,object>(Ser_unityengine_colliderdistance2d.Ser));
            bindsRes.Add(typeof(UnityEngine.ColliderDistance2D),new Func<Reader,object,object>(Ser_unityengine_colliderdistance2d.Res));
            bindsSer.Add(typeof(UnityEngine.JointLimitState2D),new Action<Writer,object>(Ser_unityengine_jointlimitstate2d.Ser));
            bindsRes.Add(typeof(UnityEngine.JointLimitState2D),new Func<Reader,object,object>(Ser_unityengine_jointlimitstate2d.Res));
            bindsSer.Add(typeof(UnityEngine.JointAngleLimits2D),new Action<Writer,object>(Ser_unityengine_jointanglelimits2d.Ser));
            bindsRes.Add(typeof(UnityEngine.JointAngleLimits2D),new Func<Reader,object,object>(Ser_unityengine_jointanglelimits2d.Res));
            bindsSer.Add(typeof(UnityEngine.JointTranslationLimits2D),new Action<Writer,object>(Ser_unityengine_jointtranslationlimits2d.Ser));
            bindsRes.Add(typeof(UnityEngine.JointTranslationLimits2D),new Func<Reader,object,object>(Ser_unityengine_jointtranslationlimits2d.Res));
            bindsSer.Add(typeof(UnityEngine.JointMotor2D),new Action<Writer,object>(Ser_unityengine_jointmotor2d.Ser));
            bindsRes.Add(typeof(UnityEngine.JointMotor2D),new Func<Reader,object,object>(Ser_unityengine_jointmotor2d.Res));
            bindsSer.Add(typeof(UnityEngine.JointSuspension2D),new Action<Writer,object>(Ser_unityengine_jointsuspension2d.Ser));
            bindsRes.Add(typeof(UnityEngine.JointSuspension2D),new Func<Reader,object,object>(Ser_unityengine_jointsuspension2d.Res));
            bindsSer.Add(typeof(UnityEngine.AnchoredJoint2D),new Action<Writer,object>(Ser_unityengine_anchoredjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.AnchoredJoint2D),new Func<Reader,object,object>(Ser_unityengine_anchoredjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.SpringJoint2D),new Action<Writer,object>(Ser_unityengine_springjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.SpringJoint2D),new Func<Reader,object,object>(Ser_unityengine_springjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.DistanceJoint2D),new Action<Writer,object>(Ser_unityengine_distancejoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.DistanceJoint2D),new Func<Reader,object,object>(Ser_unityengine_distancejoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.FrictionJoint2D),new Action<Writer,object>(Ser_unityengine_frictionjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.FrictionJoint2D),new Func<Reader,object,object>(Ser_unityengine_frictionjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.HingeJoint2D),new Action<Writer,object>(Ser_unityengine_hingejoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.HingeJoint2D),new Func<Reader,object,object>(Ser_unityengine_hingejoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.RelativeJoint2D),new Action<Writer,object>(Ser_unityengine_relativejoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.RelativeJoint2D),new Func<Reader,object,object>(Ser_unityengine_relativejoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.SliderJoint2D),new Action<Writer,object>(Ser_unityengine_sliderjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.SliderJoint2D),new Func<Reader,object,object>(Ser_unityengine_sliderjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.TargetJoint2D),new Action<Writer,object>(Ser_unityengine_targetjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.TargetJoint2D),new Func<Reader,object,object>(Ser_unityengine_targetjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.FixedJoint2D),new Action<Writer,object>(Ser_unityengine_fixedjoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.FixedJoint2D),new Func<Reader,object,object>(Ser_unityengine_fixedjoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.WheelJoint2D),new Action<Writer,object>(Ser_unityengine_wheeljoint2d.Ser));
            bindsRes.Add(typeof(UnityEngine.WheelJoint2D),new Func<Reader,object,object>(Ser_unityengine_wheeljoint2d.Res));
            bindsSer.Add(typeof(UnityEngine.PhysicsMaterial2D),new Action<Writer,object>(Ser_unityengine_physicsmaterial2d.Ser));
            bindsRes.Add(typeof(UnityEngine.PhysicsMaterial2D),new Func<Reader,object,object>(Ser_unityengine_physicsmaterial2d.Res));
            bindsSer.Add(typeof(UnityEngine.PhysicsUpdateBehaviour2D),new Action<Writer,object>(Ser_unityengine_physicsupdatebehaviour2d.Ser));
            bindsRes.Add(typeof(UnityEngine.PhysicsUpdateBehaviour2D),new Func<Reader,object,object>(Ser_unityengine_physicsupdatebehaviour2d.Res));
            bindsSer.Add(typeof(UnityEngine.ConstantForce2D),new Action<Writer,object>(Ser_unityengine_constantforce2d.Ser));
            bindsRes.Add(typeof(UnityEngine.ConstantForce2D),new Func<Reader,object,object>(Ser_unityengine_constantforce2d.Res));
            bindsSer.Add(typeof(UnityEngine.EffectorSelection2D),new Action<Writer,object>(Ser_unityengine_effectorselection2d.Ser));
            bindsRes.Add(typeof(UnityEngine.EffectorSelection2D),new Func<Reader,object,object>(Ser_unityengine_effectorselection2d.Res));
            bindsSer.Add(typeof(UnityEngine.EffectorForceMode2D),new Action<Writer,object>(Ser_unityengine_effectorforcemode2d.Ser));
            bindsRes.Add(typeof(UnityEngine.EffectorForceMode2D),new Func<Reader,object,object>(Ser_unityengine_effectorforcemode2d.Res));
            bindsSer.Add(typeof(UnityEngine.Effector2D),new Action<Writer,object>(Ser_unityengine_effector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Effector2D),new Func<Reader,object,object>(Ser_unityengine_effector2d.Res));
            bindsSer.Add(typeof(UnityEngine.BuoyancyEffector2D),new Action<Writer,object>(Ser_unityengine_buoyancyeffector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.BuoyancyEffector2D),new Func<Reader,object,object>(Ser_unityengine_buoyancyeffector2d.Res));
            bindsSer.Add(typeof(UnityEngine.PointEffector2D),new Action<Writer,object>(Ser_unityengine_pointeffector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.PointEffector2D),new Func<Reader,object,object>(Ser_unityengine_pointeffector2d.Res));
            bindsSer.Add(typeof(UnityEngine.SurfaceEffector2D),new Action<Writer,object>(Ser_unityengine_surfaceeffector2d.Ser));
            bindsRes.Add(typeof(UnityEngine.SurfaceEffector2D),new Func<Reader,object,object>(Ser_unityengine_surfaceeffector2d.Res));
            bindsSer.Add(typeof(UnityEngine.WheelHit),new Action<Writer,object>(Ser_unityengine_wheelhit.Ser));
            bindsRes.Add(typeof(UnityEngine.WheelHit),new Func<Reader,object,object>(Ser_unityengine_wheelhit.Res));
            bindsSer.Add(typeof(UnityEngine.WheelCollider),new Action<Writer,object>(Ser_unityengine_wheelcollider.Ser));
            bindsRes.Add(typeof(UnityEngine.WheelCollider),new Func<Reader,object,object>(Ser_unityengine_wheelcollider.Res));
            bindsSer.Add(typeof(UnityEngine.ClothSkinningCoefficient),new Action<Writer,object>(Ser_unityengine_clothskinningcoefficient.Ser));
            bindsRes.Add(typeof(UnityEngine.ClothSkinningCoefficient),new Func<Reader,object,object>(Ser_unityengine_clothskinningcoefficient.Res));
            bindsSer.Add(typeof(UnityEngine.ClothSphereColliderPair),new Action<Writer,object>(Ser_unityengine_clothspherecolliderpair.Ser));
            bindsRes.Add(typeof(UnityEngine.ClothSphereColliderPair),new Func<Reader,object,object>(Ser_unityengine_clothspherecolliderpair.Res));
            bindsSer.Add(typeof(UnityEngine.Cloth),new Action<Writer,object>(Ser_unityengine_cloth.Ser));
            bindsRes.Add(typeof(UnityEngine.Cloth),new Func<Reader,object,object>(Ser_unityengine_cloth.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshHit),new Action<Writer,object>(Ser_unityengine_ai_navmeshhit.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshHit),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshhit.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshTriangulation),new Action<Writer,object>(Ser_unityengine_ai_navmeshtriangulation.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshTriangulation),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshtriangulation.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshData),new Action<Writer,object>(Ser_unityengine_ai_navmeshdata.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshData),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshdata.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshDataInstance),new Action<Writer,object>(Ser_unityengine_ai_navmeshdatainstance.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshDataInstance),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshdatainstance.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshLinkData),new Action<Writer,object>(Ser_unityengine_ai_navmeshlinkdata.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshLinkData),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshlinkdata.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshLinkInstance),new Action<Writer,object>(Ser_unityengine_ai_navmeshlinkinstance.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshLinkInstance),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshlinkinstance.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshQueryFilter),new Action<Writer,object>(Ser_unityengine_ai_navmeshqueryfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshQueryFilter),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshqueryfilter.Res));
            bindsSer.Add(typeof(UnityEngine.AI.ObstacleAvoidanceType),new Action<Writer,object>(Ser_unityengine_ai_obstacleavoidancetype.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.ObstacleAvoidanceType),new Func<Reader,object,object>(Ser_unityengine_ai_obstacleavoidancetype.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshAgent),new Action<Writer,object>(Ser_unityengine_ai_navmeshagent.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshAgent),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshagent.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshObstacleShape),new Action<Writer,object>(Ser_unityengine_ai_navmeshobstacleshape.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshObstacleShape),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshobstacleshape.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshObstacle),new Action<Writer,object>(Ser_unityengine_ai_navmeshobstacle.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshObstacle),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshobstacle.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshPathStatus),new Action<Writer,object>(Ser_unityengine_ai_navmeshpathstatus.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshPathStatus),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshpathstatus.Res));
            bindsSer.Add(typeof(UnityEngine.AI.OffMeshLinkType),new Action<Writer,object>(Ser_unityengine_ai_offmeshlinktype.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.OffMeshLinkType),new Func<Reader,object,object>(Ser_unityengine_ai_offmeshlinktype.Res));
            bindsSer.Add(typeof(UnityEngine.AI.OffMeshLink),new Action<Writer,object>(Ser_unityengine_ai_offmeshlink.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.OffMeshLink),new Func<Reader,object,object>(Ser_unityengine_ai_offmeshlink.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshBuildSettings),new Action<Writer,object>(Ser_unityengine_ai_navmeshbuildsettings.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshBuildSettings),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshbuildsettings.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshBuildSourceShape),new Action<Writer,object>(Ser_unityengine_ai_navmeshbuildsourceshape.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshBuildSourceShape),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshbuildsourceshape.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshCollectGeometry),new Action<Writer,object>(Ser_unityengine_ai_navmeshcollectgeometry.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshCollectGeometry),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshcollectgeometry.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshBuildSource),new Action<Writer,object>(Ser_unityengine_ai_navmeshbuildsource.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshBuildSource),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshbuildsource.Res));
            bindsSer.Add(typeof(UnityEngine.AI.NavMeshBuildMarkup),new Action<Writer,object>(Ser_unityengine_ai_navmeshbuildmarkup.Ser));
            bindsRes.Add(typeof(UnityEngine.AI.NavMeshBuildMarkup),new Func<Reader,object,object>(Ser_unityengine_ai_navmeshbuildmarkup.Res));
            bindsSer.Add(typeof(UnityEngine.AudioSource),new Action<Writer,object>(Ser_unityengine_audiosource.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioSource),new Func<Reader,object,object>(Ser_unityengine_audiosource.Res));
            bindsSer.Add(typeof(UnityEngine.AudioLowPassFilter),new Action<Writer,object>(Ser_unityengine_audiolowpassfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioLowPassFilter),new Func<Reader,object,object>(Ser_unityengine_audiolowpassfilter.Res));
            bindsSer.Add(typeof(UnityEngine.AudioHighPassFilter),new Action<Writer,object>(Ser_unityengine_audiohighpassfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioHighPassFilter),new Func<Reader,object,object>(Ser_unityengine_audiohighpassfilter.Res));
            bindsSer.Add(typeof(UnityEngine.AudioReverbFilter),new Action<Writer,object>(Ser_unityengine_audioreverbfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioReverbFilter),new Func<Reader,object,object>(Ser_unityengine_audioreverbfilter.Res));
            bindsSer.Add(typeof(UnityEngine.AudioSpeakerMode),new Action<Writer,object>(Ser_unityengine_audiospeakermode.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioSpeakerMode),new Func<Reader,object,object>(Ser_unityengine_audiospeakermode.Res));
            bindsSer.Add(typeof(UnityEngine.AudioDataLoadState),new Action<Writer,object>(Ser_unityengine_audiodataloadstate.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioDataLoadState),new Func<Reader,object,object>(Ser_unityengine_audiodataloadstate.Res));
            bindsSer.Add(typeof(UnityEngine.AudioConfiguration),new Action<Writer,object>(Ser_unityengine_audioconfiguration.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioConfiguration),new Func<Reader,object,object>(Ser_unityengine_audioconfiguration.Res));
            bindsSer.Add(typeof(UnityEngine.AudioCompressionFormat),new Action<Writer,object>(Ser_unityengine_audiocompressionformat.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioCompressionFormat),new Func<Reader,object,object>(Ser_unityengine_audiocompressionformat.Res));
            bindsSer.Add(typeof(UnityEngine.AudioClipLoadType),new Action<Writer,object>(Ser_unityengine_audiocliploadtype.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioClipLoadType),new Func<Reader,object,object>(Ser_unityengine_audiocliploadtype.Res));
            bindsSer.Add(typeof(UnityEngine.AudioClip),new Action<Writer,object>(Ser_unityengine_audioclip.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioClip),new Func<Reader,object,object>(Ser_unityengine_audioclip.Res));
            bindsSer.Add(typeof(UnityEngine.AudioVelocityUpdateMode),new Action<Writer,object>(Ser_unityengine_audiovelocityupdatemode.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioVelocityUpdateMode),new Func<Reader,object,object>(Ser_unityengine_audiovelocityupdatemode.Res));
            bindsSer.Add(typeof(UnityEngine.AudioBehaviour),new Action<Writer,object>(Ser_unityengine_audiobehaviour.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioBehaviour),new Func<Reader,object,object>(Ser_unityengine_audiobehaviour.Res));
            bindsSer.Add(typeof(UnityEngine.AudioListener),new Action<Writer,object>(Ser_unityengine_audiolistener.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioListener),new Func<Reader,object,object>(Ser_unityengine_audiolistener.Res));
            bindsSer.Add(typeof(UnityEngine.FFTWindow),new Action<Writer,object>(Ser_unityengine_fftwindow.Ser));
            bindsRes.Add(typeof(UnityEngine.FFTWindow),new Func<Reader,object,object>(Ser_unityengine_fftwindow.Res));
            bindsSer.Add(typeof(UnityEngine.AudioRolloffMode),new Action<Writer,object>(Ser_unityengine_audiorolloffmode.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioRolloffMode),new Func<Reader,object,object>(Ser_unityengine_audiorolloffmode.Res));
            bindsSer.Add(typeof(UnityEngine.AudioSourceCurveType),new Action<Writer,object>(Ser_unityengine_audiosourcecurvetype.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioSourceCurveType),new Func<Reader,object,object>(Ser_unityengine_audiosourcecurvetype.Res));
            bindsSer.Add(typeof(UnityEngine.AudioReverbPreset),new Action<Writer,object>(Ser_unityengine_audioreverbpreset.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioReverbPreset),new Func<Reader,object,object>(Ser_unityengine_audioreverbpreset.Res));
            bindsSer.Add(typeof(UnityEngine.AudioReverbZone),new Action<Writer,object>(Ser_unityengine_audioreverbzone.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioReverbZone),new Func<Reader,object,object>(Ser_unityengine_audioreverbzone.Res));
            bindsSer.Add(typeof(UnityEngine.AudioDistortionFilter),new Action<Writer,object>(Ser_unityengine_audiodistortionfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioDistortionFilter),new Func<Reader,object,object>(Ser_unityengine_audiodistortionfilter.Res));
            bindsSer.Add(typeof(UnityEngine.AudioEchoFilter),new Action<Writer,object>(Ser_unityengine_audioechofilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioEchoFilter),new Func<Reader,object,object>(Ser_unityengine_audioechofilter.Res));
            bindsSer.Add(typeof(UnityEngine.AudioChorusFilter),new Action<Writer,object>(Ser_unityengine_audiochorusfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.AudioChorusFilter),new Func<Reader,object,object>(Ser_unityengine_audiochorusfilter.Res));
            bindsSer.Add(typeof(UnityEngine.MovieTexture),new Action<Writer,object>(Ser_unityengine_movietexture.Ser));
            bindsRes.Add(typeof(UnityEngine.MovieTexture),new Func<Reader,object,object>(Ser_unityengine_movietexture.Res));
            bindsSer.Add(typeof(UnityEngine.Animator),new Action<Writer,object>(Ser_unityengine_animator.Ser));
            bindsRes.Add(typeof(UnityEngine.Animator),new Func<Reader,object,object>(Ser_unityengine_animator.Res));
            bindsSer.Add(typeof(UnityEngine.AnimatorOverrideController),new Action<Writer,object>(Ser_unityengine_animatoroverridecontroller.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimatorOverrideController),new Func<Reader,object,object>(Ser_unityengine_animatoroverridecontroller.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationEvent),new Action<Writer,object>(Ser_unityengine_animationevent.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationEvent),new Func<Reader,object,object>(Ser_unityengine_animationevent.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationClip),new Action<Writer,object>(Ser_unityengine_animationclip.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationClip),new Func<Reader,object,object>(Ser_unityengine_animationclip.Res));
            bindsSer.Add(typeof(UnityEngine.PlayMode),new Action<Writer,object>(Ser_unityengine_playmode.Ser));
            bindsRes.Add(typeof(UnityEngine.PlayMode),new Func<Reader,object,object>(Ser_unityengine_playmode.Res));
            bindsSer.Add(typeof(UnityEngine.QueueMode),new Action<Writer,object>(Ser_unityengine_queuemode.Ser));
            bindsRes.Add(typeof(UnityEngine.QueueMode),new Func<Reader,object,object>(Ser_unityengine_queuemode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationBlendMode),new Action<Writer,object>(Ser_unityengine_animationblendmode.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationBlendMode),new Func<Reader,object,object>(Ser_unityengine_animationblendmode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationPlayMode),new Action<Writer,object>(Ser_unityengine_animationplaymode.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationPlayMode),new Func<Reader,object,object>(Ser_unityengine_animationplaymode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationCullingType),new Action<Writer,object>(Ser_unityengine_animationcullingtype.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationCullingType),new Func<Reader,object,object>(Ser_unityengine_animationcullingtype.Res));
            bindsSer.Add(typeof(UnityEngine.Animation),new Action<Writer,object>(Ser_unityengine_animation.Ser));
            bindsRes.Add(typeof(UnityEngine.Animation),new Func<Reader,object,object>(Ser_unityengine_animation.Res));
            bindsSer.Add(typeof(UnityEngine.AnimationState),new Action<Writer,object>(Ser_unityengine_animationstate.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimationState),new Func<Reader,object,object>(Ser_unityengine_animationstate.Res));
            bindsSer.Add(typeof(UnityEngine.AnimatorRecorderMode),new Action<Writer,object>(Ser_unityengine_animatorrecordermode.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimatorRecorderMode),new Func<Reader,object,object>(Ser_unityengine_animatorrecordermode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimatorCullingMode),new Action<Writer,object>(Ser_unityengine_animatorcullingmode.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimatorCullingMode),new Func<Reader,object,object>(Ser_unityengine_animatorcullingmode.Res));
            bindsSer.Add(typeof(UnityEngine.AnimatorUpdateMode),new Action<Writer,object>(Ser_unityengine_animatorupdatemode.Ser));
            bindsRes.Add(typeof(UnityEngine.AnimatorUpdateMode),new Func<Reader,object,object>(Ser_unityengine_animatorupdatemode.Res));
            bindsSer.Add(typeof(UnityEngine.MatchTargetWeightMask),new Action<Writer,object>(Ser_unityengine_matchtargetweightmask.Ser));
            bindsRes.Add(typeof(UnityEngine.MatchTargetWeightMask),new Func<Reader,object,object>(Ser_unityengine_matchtargetweightmask.Res));
            bindsSer.Add(typeof(UnityEngine.SkeletonBone),new Action<Writer,object>(Ser_unityengine_skeletonbone.Ser));
            bindsRes.Add(typeof(UnityEngine.SkeletonBone),new Func<Reader,object,object>(Ser_unityengine_skeletonbone.Res));
            bindsSer.Add(typeof(UnityEngine.HumanLimit),new Action<Writer,object>(Ser_unityengine_humanlimit.Ser));
            bindsRes.Add(typeof(UnityEngine.HumanLimit),new Func<Reader,object,object>(Ser_unityengine_humanlimit.Res));
            bindsSer.Add(typeof(UnityEngine.HumanBone),new Action<Writer,object>(Ser_unityengine_humanbone.Ser));
            bindsRes.Add(typeof(UnityEngine.HumanBone),new Func<Reader,object,object>(Ser_unityengine_humanbone.Res));
            bindsSer.Add(typeof(UnityEngine.HumanDescription),new Action<Writer,object>(Ser_unityengine_humandescription.Ser));
            bindsRes.Add(typeof(UnityEngine.HumanDescription),new Func<Reader,object,object>(Ser_unityengine_humandescription.Res));
            bindsSer.Add(typeof(UnityEngine.RuntimeAnimatorController),new Action<Writer,object>(Ser_unityengine_runtimeanimatorcontroller.Ser));
            bindsRes.Add(typeof(UnityEngine.RuntimeAnimatorController),new Func<Reader,object,object>(Ser_unityengine_runtimeanimatorcontroller.Res));
            bindsSer.Add(typeof(UnityEngine.HumanBodyBones),new Action<Writer,object>(Ser_unityengine_humanbodybones.Ser));
            bindsRes.Add(typeof(UnityEngine.HumanBodyBones),new Func<Reader,object,object>(Ser_unityengine_humanbodybones.Res));
            bindsSer.Add(typeof(UnityEngine.HumanPose),new Action<Writer,object>(Ser_unityengine_humanpose.Ser));
            bindsRes.Add(typeof(UnityEngine.HumanPose),new Func<Reader,object,object>(Ser_unityengine_humanpose.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimatorControllerPlayable),new Action<Writer,object>(Ser_unityengine_experimental_director_animatorcontrollerplayable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimatorControllerPlayable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animatorcontrollerplayable.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimationMixerPlayable),new Action<Writer,object>(Ser_unityengine_experimental_director_animationmixerplayable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimationMixerPlayable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animationmixerplayable.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimationLayerMixerPlayable),new Action<Writer,object>(Ser_unityengine_experimental_director_animationlayermixerplayable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimationLayerMixerPlayable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animationlayermixerplayable.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimationClipPlayable),new Action<Writer,object>(Ser_unityengine_experimental_director_animationclipplayable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimationClipPlayable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animationclipplayable.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimationPlayable),new Action<Writer,object>(Ser_unityengine_experimental_director_animationplayable.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimationPlayable),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animationplayable.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.AnimationPlayableOutput),new Action<Writer,object>(Ser_unityengine_experimental_director_animationplayableoutput.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.AnimationPlayableOutput),new Func<Reader,object,object>(Ser_unityengine_experimental_director_animationplayableoutput.Res));
            bindsSer.Add(typeof(UnityEngine.Motion),new Action<Writer,object>(Ser_unityengine_motion.Ser));
            bindsRes.Add(typeof(UnityEngine.Motion),new Func<Reader,object,object>(Ser_unityengine_motion.Res));
            bindsSer.Add(typeof(UnityEngine.TreePrototype),new Action<Writer,object>(Ser_unityengine_treeprototype.Ser));
            bindsRes.Add(typeof(UnityEngine.TreePrototype),new Func<Reader,object,object>(Ser_unityengine_treeprototype.Res));
            bindsSer.Add(typeof(UnityEngine.DetailRenderMode),new Action<Writer,object>(Ser_unityengine_detailrendermode.Ser));
            bindsRes.Add(typeof(UnityEngine.DetailRenderMode),new Func<Reader,object,object>(Ser_unityengine_detailrendermode.Res));
            bindsSer.Add(typeof(UnityEngine.DetailPrototype),new Action<Writer,object>(Ser_unityengine_detailprototype.Ser));
            bindsRes.Add(typeof(UnityEngine.DetailPrototype),new Func<Reader,object,object>(Ser_unityengine_detailprototype.Res));
            bindsSer.Add(typeof(UnityEngine.SplatPrototype),new Action<Writer,object>(Ser_unityengine_splatprototype.Ser));
            bindsRes.Add(typeof(UnityEngine.SplatPrototype),new Func<Reader,object,object>(Ser_unityengine_splatprototype.Res));
            bindsSer.Add(typeof(UnityEngine.TreeInstance),new Action<Writer,object>(Ser_unityengine_treeinstance.Ser));
            bindsRes.Add(typeof(UnityEngine.TreeInstance),new Func<Reader,object,object>(Ser_unityengine_treeinstance.Res));
            bindsSer.Add(typeof(UnityEngine.TerrainData),new Action<Writer,object>(Ser_unityengine_terraindata.Ser));
            bindsRes.Add(typeof(UnityEngine.TerrainData),new Func<Reader,object,object>(Ser_unityengine_terraindata.Res));
            bindsSer.Add(typeof(UnityEngine.TerrainChangedFlags),new Action<Writer,object>(Ser_unityengine_terrainchangedflags.Ser));
            bindsRes.Add(typeof(UnityEngine.TerrainChangedFlags),new Func<Reader,object,object>(Ser_unityengine_terrainchangedflags.Res));
            bindsSer.Add(typeof(UnityEngine.TerrainRenderFlags),new Action<Writer,object>(Ser_unityengine_terrainrenderflags.Ser));
            bindsRes.Add(typeof(UnityEngine.TerrainRenderFlags),new Func<Reader,object,object>(Ser_unityengine_terrainrenderflags.Res));
            bindsSer.Add(typeof(UnityEngine.Terrain),new Action<Writer,object>(Ser_unityengine_terrain.Ser));
            bindsRes.Add(typeof(UnityEngine.Terrain),new Func<Reader,object,object>(Ser_unityengine_terrain.Res));
            bindsSer.Add(typeof(UnityEngine.Terrain.MaterialType),new Action<Writer,object>(Ser_unityengine_terrain_materialtype.Ser));
            bindsRes.Add(typeof(UnityEngine.Terrain.MaterialType),new Func<Reader,object,object>(Ser_unityengine_terrain_materialtype.Res));
            bindsSer.Add(typeof(UnityEngine.Tree),new Action<Writer,object>(Ser_unityengine_tree.Ser));
            bindsRes.Add(typeof(UnityEngine.Tree),new Func<Reader,object,object>(Ser_unityengine_tree.Res));
            bindsSer.Add(typeof(UnityEngine.FontStyle),new Action<Writer,object>(Ser_unityengine_fontstyle.Ser));
            bindsRes.Add(typeof(UnityEngine.FontStyle),new Func<Reader,object,object>(Ser_unityengine_fontstyle.Res));
            bindsSer.Add(typeof(UnityEngine.TextGenerationSettings),new Action<Writer,object>(Ser_unityengine_textgenerationsettings.Ser));
            bindsRes.Add(typeof(UnityEngine.TextGenerationSettings),new Func<Reader,object,object>(Ser_unityengine_textgenerationsettings.Res));
            bindsSer.Add(typeof(UnityEngine.TextAlignment),new Action<Writer,object>(Ser_unityengine_textalignment.Ser));
            bindsRes.Add(typeof(UnityEngine.TextAlignment),new Func<Reader,object,object>(Ser_unityengine_textalignment.Res));
            bindsSer.Add(typeof(UnityEngine.TextAnchor),new Action<Writer,object>(Ser_unityengine_textanchor.Ser));
            bindsRes.Add(typeof(UnityEngine.TextAnchor),new Func<Reader,object,object>(Ser_unityengine_textanchor.Res));
            bindsSer.Add(typeof(UnityEngine.HorizontalWrapMode),new Action<Writer,object>(Ser_unityengine_horizontalwrapmode.Ser));
            bindsRes.Add(typeof(UnityEngine.HorizontalWrapMode),new Func<Reader,object,object>(Ser_unityengine_horizontalwrapmode.Res));
            bindsSer.Add(typeof(UnityEngine.VerticalWrapMode),new Action<Writer,object>(Ser_unityengine_verticalwrapmode.Ser));
            bindsRes.Add(typeof(UnityEngine.VerticalWrapMode),new Func<Reader,object,object>(Ser_unityengine_verticalwrapmode.Res));
            bindsSer.Add(typeof(UnityEngine.TextMesh),new Action<Writer,object>(Ser_unityengine_textmesh.Ser));
            bindsRes.Add(typeof(UnityEngine.TextMesh),new Func<Reader,object,object>(Ser_unityengine_textmesh.Res));
            bindsSer.Add(typeof(UnityEngine.CharacterInfo),new Action<Writer,object>(Ser_unityengine_characterinfo.Ser));
            bindsRes.Add(typeof(UnityEngine.CharacterInfo),new Func<Reader,object,object>(Ser_unityengine_characterinfo.Res));
            bindsSer.Add(typeof(UnityEngine.Font),new Action<Writer,object>(Ser_unityengine_font.Ser));
            bindsRes.Add(typeof(UnityEngine.Font),new Func<Reader,object,object>(Ser_unityengine_font.Res));
            bindsSer.Add(typeof(UnityEngine.UICharInfo),new Action<Writer,object>(Ser_unityengine_uicharinfo.Ser));
            bindsRes.Add(typeof(UnityEngine.UICharInfo),new Func<Reader,object,object>(Ser_unityengine_uicharinfo.Res));
            bindsSer.Add(typeof(UnityEngine.UILineInfo),new Action<Writer,object>(Ser_unityengine_uilineinfo.Ser));
            bindsRes.Add(typeof(UnityEngine.UILineInfo),new Func<Reader,object,object>(Ser_unityengine_uilineinfo.Res));
            bindsSer.Add(typeof(UnityEngine.UIVertex),new Action<Writer,object>(Ser_unityengine_uivertex.Ser));
            bindsRes.Add(typeof(UnityEngine.UIVertex),new Func<Reader,object,object>(Ser_unityengine_uivertex.Res));
            bindsSer.Add(typeof(UnityEngine.RenderMode),new Action<Writer,object>(Ser_unityengine_rendermode.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderMode),new Func<Reader,object,object>(Ser_unityengine_rendermode.Res));
            bindsSer.Add(typeof(UnityEngine.AdditionalCanvasShaderChannels),new Action<Writer,object>(Ser_unityengine_additionalcanvasshaderchannels.Ser));
            bindsRes.Add(typeof(UnityEngine.AdditionalCanvasShaderChannels),new Func<Reader,object,object>(Ser_unityengine_additionalcanvasshaderchannels.Res));
            bindsSer.Add(typeof(UnityEngine.Canvas),new Action<Writer,object>(Ser_unityengine_canvas.Ser));
            bindsRes.Add(typeof(UnityEngine.Canvas),new Func<Reader,object,object>(Ser_unityengine_canvas.Res));
            bindsSer.Add(typeof(UnityEngine.CanvasGroup),new Action<Writer,object>(Ser_unityengine_canvasgroup.Ser));
            bindsRes.Add(typeof(UnityEngine.CanvasGroup),new Func<Reader,object,object>(Ser_unityengine_canvasgroup.Res));
            bindsSer.Add(typeof(UnityEngine.CanvasRenderer),new Action<Writer,object>(Ser_unityengine_canvasrenderer.Ser));
            bindsRes.Add(typeof(UnityEngine.CanvasRenderer),new Func<Reader,object,object>(Ser_unityengine_canvasrenderer.Res));
            bindsSer.Add(typeof(UnityEngine.TerrainCollider),new Action<Writer,object>(Ser_unityengine_terraincollider.Ser));
            bindsRes.Add(typeof(UnityEngine.TerrainCollider),new Func<Reader,object,object>(Ser_unityengine_terraincollider.Res));
            bindsSer.Add(typeof(UnityEngine.Event),new Action<Writer,object>(Ser_unityengine_event.Ser));
            bindsRes.Add(typeof(UnityEngine.Event),new Func<Reader,object,object>(Ser_unityengine_event.Res));
            bindsSer.Add(typeof(UnityEngine.EventType),new Action<Writer,object>(Ser_unityengine_eventtype.Ser));
            bindsRes.Add(typeof(UnityEngine.EventType),new Func<Reader,object,object>(Ser_unityengine_eventtype.Res));
            bindsSer.Add(typeof(UnityEngine.EventModifiers),new Action<Writer,object>(Ser_unityengine_eventmodifiers.Ser));
            bindsRes.Add(typeof(UnityEngine.EventModifiers),new Func<Reader,object,object>(Ser_unityengine_eventmodifiers.Res));
            bindsSer.Add(typeof(UnityEngine.ScaleMode),new Action<Writer,object>(Ser_unityengine_scalemode.Ser));
            bindsRes.Add(typeof(UnityEngine.ScaleMode),new Func<Reader,object,object>(Ser_unityengine_scalemode.Res));
            bindsSer.Add(typeof(UnityEngine.FocusType),new Action<Writer,object>(Ser_unityengine_focustype.Ser));
            bindsRes.Add(typeof(UnityEngine.FocusType),new Func<Reader,object,object>(Ser_unityengine_focustype.Res));
            bindsSer.Add(typeof(UnityEngine.ImagePosition),new Action<Writer,object>(Ser_unityengine_imageposition.Ser));
            bindsRes.Add(typeof(UnityEngine.ImagePosition),new Func<Reader,object,object>(Ser_unityengine_imageposition.Res));
            bindsSer.Add(typeof(UnityEngine.TextClipping),new Action<Writer,object>(Ser_unityengine_textclipping.Ser));
            bindsRes.Add(typeof(UnityEngine.TextClipping),new Func<Reader,object,object>(Ser_unityengine_textclipping.Res));
            bindsSer.Add(typeof(UnityEngine.TextEditor),new Action<Writer,object>(Ser_unityengine_texteditor.Ser));
            bindsRes.Add(typeof(UnityEngine.TextEditor),new Func<Reader,object,object>(Ser_unityengine_texteditor.Res));
            bindsSer.Add(typeof(UnityEngine.TextEditor.DblClickSnapping),new Action<Writer,object>(Ser_unityengine_texteditor_dblclicksnapping.Ser));
            bindsRes.Add(typeof(UnityEngine.TextEditor.DblClickSnapping),new Func<Reader,object,object>(Ser_unityengine_texteditor_dblclicksnapping.Res));
            bindsSer.Add(typeof(UnityEngine.ClusterInputType),new Action<Writer,object>(Ser_unityengine_clusterinputtype.Ser));
            bindsRes.Add(typeof(UnityEngine.ClusterInputType),new Func<Reader,object,object>(Ser_unityengine_clusterinputtype.Res));
            bindsSer.Add(typeof(UnityEngine.Analytics.Gender),new Action<Writer,object>(Ser_unityengine_analytics_gender.Ser));
            bindsRes.Add(typeof(UnityEngine.Analytics.Gender),new Func<Reader,object,object>(Ser_unityengine_analytics_gender.Res));
            bindsSer.Add(typeof(UnityEngine.Analytics.AnalyticsResult),new Action<Writer,object>(Ser_unityengine_analytics_analyticsresult.Ser));
            bindsRes.Add(typeof(UnityEngine.Analytics.AnalyticsResult),new Func<Reader,object,object>(Ser_unityengine_analytics_analyticsresult.Res));
            bindsSer.Add(typeof(UnityEngine.VR.VRNode),new Action<Writer,object>(Ser_unityengine_vr_vrnode.Ser));
            bindsRes.Add(typeof(UnityEngine.VR.VRNode),new Func<Reader,object,object>(Ser_unityengine_vr_vrnode.Res));
            bindsSer.Add(typeof(UnityEngine.VR.TrackingSpaceType),new Action<Writer,object>(Ser_unityengine_vr_trackingspacetype.Ser));
            bindsRes.Add(typeof(UnityEngine.VR.TrackingSpaceType),new Func<Reader,object,object>(Ser_unityengine_vr_trackingspacetype.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoRenderMode),new Action<Writer,object>(Ser_unityengine_video_videorendermode.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoRenderMode),new Func<Reader,object,object>(Ser_unityengine_video_videorendermode.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoAspectRatio),new Action<Writer,object>(Ser_unityengine_video_videoaspectratio.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoAspectRatio),new Func<Reader,object,object>(Ser_unityengine_video_videoaspectratio.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoTimeSource),new Action<Writer,object>(Ser_unityengine_video_videotimesource.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoTimeSource),new Func<Reader,object,object>(Ser_unityengine_video_videotimesource.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoSource),new Action<Writer,object>(Ser_unityengine_video_videosource.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoSource),new Func<Reader,object,object>(Ser_unityengine_video_videosource.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoAudioOutputMode),new Action<Writer,object>(Ser_unityengine_video_videoaudiooutputmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoAudioOutputMode),new Func<Reader,object,object>(Ser_unityengine_video_videoaudiooutputmode.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoPlayer),new Action<Writer,object>(Ser_unityengine_video_videoplayer.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoPlayer),new Func<Reader,object,object>(Ser_unityengine_video_videoplayer.Res));
            bindsSer.Add(typeof(UnityEngine.Video.VideoClip),new Action<Writer,object>(Ser_unityengine_video_videoclip.Ser));
            bindsRes.Add(typeof(UnityEngine.Video.VideoClip),new Func<Reader,object,object>(Ser_unityengine_video_videoclip.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeInputEventType),new Action<Writer,object>(Ser_unityengineinternal_input_nativeinputeventtype.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeInputEventType),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativeinputeventtype.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeInputEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativeinputevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeInputEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativeinputevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeGenericEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativegenericevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeGenericEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativegenericevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeKeyEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativekeyevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeKeyEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativekeyevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativePointerEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativepointerevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativePointerEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativepointerevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeTextEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativetextevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeTextEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativetextevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeTrackingEvent),new Action<Writer,object>(Ser_unityengineinternal_input_nativetrackingevent.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeTrackingEvent),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativetrackingevent.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeInputDeviceInfo),new Action<Writer,object>(Ser_unityengineinternal_input_nativeinputdeviceinfo.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeInputDeviceInfo),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativeinputdeviceinfo.Res));
            bindsSer.Add(typeof(UnityEngineInternal.Input.NativeInputUpdateType),new Action<Writer,object>(Ser_unityengineinternal_input_nativeinputupdatetype.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.Input.NativeInputUpdateType),new Func<Reader,object,object>(Ser_unityengineinternal_input_nativeinputupdatetype.Res));
            bindsSer.Add(typeof(UnityEngine.StackTraceLogType),new Action<Writer,object>(Ser_unityengine_stacktracelogtype.Ser));
            bindsRes.Add(typeof(UnityEngine.StackTraceLogType),new Func<Reader,object,object>(Ser_unityengine_stacktracelogtype.Res));
            bindsSer.Add(typeof(UnityEngine.SendMessageOptions),new Action<Writer,object>(Ser_unityengine_sendmessageoptions.Ser));
            bindsRes.Add(typeof(UnityEngine.SendMessageOptions),new Func<Reader,object,object>(Ser_unityengine_sendmessageoptions.Res));
            bindsSer.Add(typeof(UnityEngine.PrimitiveType),new Action<Writer,object>(Ser_unityengine_primitivetype.Ser));
            bindsRes.Add(typeof(UnityEngine.PrimitiveType),new Func<Reader,object,object>(Ser_unityengine_primitivetype.Res));
            bindsSer.Add(typeof(UnityEngine.Space),new Action<Writer,object>(Ser_unityengine_space.Ser));
            bindsRes.Add(typeof(UnityEngine.Space),new Func<Reader,object,object>(Ser_unityengine_space.Res));
            bindsSer.Add(typeof(UnityEngine.RuntimePlatform),new Action<Writer,object>(Ser_unityengine_runtimeplatform.Ser));
            bindsRes.Add(typeof(UnityEngine.RuntimePlatform),new Func<Reader,object,object>(Ser_unityengine_runtimeplatform.Res));
            bindsSer.Add(typeof(UnityEngine.OperatingSystemFamily),new Action<Writer,object>(Ser_unityengine_operatingsystemfamily.Ser));
            bindsRes.Add(typeof(UnityEngine.OperatingSystemFamily),new Func<Reader,object,object>(Ser_unityengine_operatingsystemfamily.Res));
            bindsSer.Add(typeof(UnityEngine.SystemLanguage),new Action<Writer,object>(Ser_unityengine_systemlanguage.Ser));
            bindsRes.Add(typeof(UnityEngine.SystemLanguage),new Func<Reader,object,object>(Ser_unityengine_systemlanguage.Res));
            bindsSer.Add(typeof(UnityEngine.LogType),new Action<Writer,object>(Ser_unityengine_logtype.Ser));
            bindsRes.Add(typeof(UnityEngine.LogType),new Func<Reader,object,object>(Ser_unityengine_logtype.Res));
            bindsSer.Add(typeof(UnityEngine.DeviceType),new Action<Writer,object>(Ser_unityengine_devicetype.Ser));
            bindsRes.Add(typeof(UnityEngine.DeviceType),new Func<Reader,object,object>(Ser_unityengine_devicetype.Res));
            bindsSer.Add(typeof(UnityEngine.BatteryStatus),new Action<Writer,object>(Ser_unityengine_batterystatus.Ser));
            bindsRes.Add(typeof(UnityEngine.BatteryStatus),new Func<Reader,object,object>(Ser_unityengine_batterystatus.Res));
            bindsSer.Add(typeof(UnityEngine.ThreadPriority),new Action<Writer,object>(Ser_unityengine_threadpriority.Ser));
            bindsRes.Add(typeof(UnityEngine.ThreadPriority),new Func<Reader,object,object>(Ser_unityengine_threadpriority.Res));
            bindsSer.Add(typeof(UnityEngine.Color),new Action<Writer,object>(Ser_unityengine_color.Ser));
            bindsRes.Add(typeof(UnityEngine.Color),new Func<Reader,object,object>(Ser_unityengine_color.Res));
            bindsSer.Add(typeof(UnityEngine.Color32),new Action<Writer,object>(Ser_unityengine_color32.Ser));
            bindsRes.Add(typeof(UnityEngine.Color32),new Func<Reader,object,object>(Ser_unityengine_color32.Res));
            bindsSer.Add(typeof(UnityEngine.Resolution),new Action<Writer,object>(Ser_unityengine_resolution.Ser));
            bindsRes.Add(typeof(UnityEngine.Resolution),new Func<Reader,object,object>(Ser_unityengine_resolution.Res));
            bindsSer.Add(typeof(UnityEngine.RenderingPath),new Action<Writer,object>(Ser_unityengine_renderingpath.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderingPath),new Func<Reader,object,object>(Ser_unityengine_renderingpath.Res));
            bindsSer.Add(typeof(UnityEngine.TransparencySortMode),new Action<Writer,object>(Ser_unityengine_transparencysortmode.Ser));
            bindsRes.Add(typeof(UnityEngine.TransparencySortMode),new Func<Reader,object,object>(Ser_unityengine_transparencysortmode.Res));
            bindsSer.Add(typeof(UnityEngine.StereoTargetEyeMask),new Action<Writer,object>(Ser_unityengine_stereotargeteyemask.Ser));
            bindsRes.Add(typeof(UnityEngine.StereoTargetEyeMask),new Func<Reader,object,object>(Ser_unityengine_stereotargeteyemask.Res));
            bindsSer.Add(typeof(UnityEngine.CameraType),new Action<Writer,object>(Ser_unityengine_cameratype.Ser));
            bindsRes.Add(typeof(UnityEngine.CameraType),new Func<Reader,object,object>(Ser_unityengine_cameratype.Res));
            bindsSer.Add(typeof(UnityEngine.ComputeBufferType),new Action<Writer,object>(Ser_unityengine_computebuffertype.Ser));
            bindsRes.Add(typeof(UnityEngine.ComputeBufferType),new Func<Reader,object,object>(Ser_unityengine_computebuffertype.Res));
            bindsSer.Add(typeof(UnityEngine.LightType),new Action<Writer,object>(Ser_unityengine_lighttype.Ser));
            bindsRes.Add(typeof(UnityEngine.LightType),new Func<Reader,object,object>(Ser_unityengine_lighttype.Res));
            bindsSer.Add(typeof(UnityEngine.LightRenderMode),new Action<Writer,object>(Ser_unityengine_lightrendermode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightRenderMode),new Func<Reader,object,object>(Ser_unityengine_lightrendermode.Res));
            bindsSer.Add(typeof(UnityEngine.LightShadows),new Action<Writer,object>(Ser_unityengine_lightshadows.Ser));
            bindsRes.Add(typeof(UnityEngine.LightShadows),new Func<Reader,object,object>(Ser_unityengine_lightshadows.Res));
            bindsSer.Add(typeof(UnityEngine.FogMode),new Action<Writer,object>(Ser_unityengine_fogmode.Ser));
            bindsRes.Add(typeof(UnityEngine.FogMode),new Func<Reader,object,object>(Ser_unityengine_fogmode.Res));
            bindsSer.Add(typeof(UnityEngine.LightmapBakeType),new Action<Writer,object>(Ser_unityengine_lightmapbaketype.Ser));
            bindsRes.Add(typeof(UnityEngine.LightmapBakeType),new Func<Reader,object,object>(Ser_unityengine_lightmapbaketype.Res));
            bindsSer.Add(typeof(UnityEngine.ShadowProjection),new Action<Writer,object>(Ser_unityengine_shadowprojection.Ser));
            bindsRes.Add(typeof(UnityEngine.ShadowProjection),new Func<Reader,object,object>(Ser_unityengine_shadowprojection.Res));
            bindsSer.Add(typeof(UnityEngine.ShadowQuality),new Action<Writer,object>(Ser_unityengine_shadowquality.Ser));
            bindsRes.Add(typeof(UnityEngine.ShadowQuality),new Func<Reader,object,object>(Ser_unityengine_shadowquality.Res));
            bindsSer.Add(typeof(UnityEngine.ShadowResolution),new Action<Writer,object>(Ser_unityengine_shadowresolution.Ser));
            bindsRes.Add(typeof(UnityEngine.ShadowResolution),new Func<Reader,object,object>(Ser_unityengine_shadowresolution.Res));
            bindsSer.Add(typeof(UnityEngine.CameraClearFlags),new Action<Writer,object>(Ser_unityengine_cameraclearflags.Ser));
            bindsRes.Add(typeof(UnityEngine.CameraClearFlags),new Func<Reader,object,object>(Ser_unityengine_cameraclearflags.Res));
            bindsSer.Add(typeof(UnityEngine.DepthTextureMode),new Action<Writer,object>(Ser_unityengine_depthtexturemode.Ser));
            bindsRes.Add(typeof(UnityEngine.DepthTextureMode),new Func<Reader,object,object>(Ser_unityengine_depthtexturemode.Res));
            bindsSer.Add(typeof(UnityEngine.TexGenMode),new Action<Writer,object>(Ser_unityengine_texgenmode.Ser));
            bindsRes.Add(typeof(UnityEngine.TexGenMode),new Func<Reader,object,object>(Ser_unityengine_texgenmode.Res));
            bindsSer.Add(typeof(UnityEngine.AnisotropicFiltering),new Action<Writer,object>(Ser_unityengine_anisotropicfiltering.Ser));
            bindsRes.Add(typeof(UnityEngine.AnisotropicFiltering),new Func<Reader,object,object>(Ser_unityengine_anisotropicfiltering.Res));
            bindsSer.Add(typeof(UnityEngine.BlendWeights),new Action<Writer,object>(Ser_unityengine_blendweights.Ser));
            bindsRes.Add(typeof(UnityEngine.BlendWeights),new Func<Reader,object,object>(Ser_unityengine_blendweights.Res));
            bindsSer.Add(typeof(UnityEngine.MeshTopology),new Action<Writer,object>(Ser_unityengine_meshtopology.Ser));
            bindsRes.Add(typeof(UnityEngine.MeshTopology),new Func<Reader,object,object>(Ser_unityengine_meshtopology.Res));
            bindsSer.Add(typeof(UnityEngine.SkinQuality),new Action<Writer,object>(Ser_unityengine_skinquality.Ser));
            bindsRes.Add(typeof(UnityEngine.SkinQuality),new Func<Reader,object,object>(Ser_unityengine_skinquality.Res));
            bindsSer.Add(typeof(UnityEngine.ColorSpace),new Action<Writer,object>(Ser_unityengine_colorspace.Ser));
            bindsRes.Add(typeof(UnityEngine.ColorSpace),new Func<Reader,object,object>(Ser_unityengine_colorspace.Res));
            bindsSer.Add(typeof(UnityEngine.ScreenOrientation),new Action<Writer,object>(Ser_unityengine_screenorientation.Ser));
            bindsRes.Add(typeof(UnityEngine.ScreenOrientation),new Func<Reader,object,object>(Ser_unityengine_screenorientation.Res));
            bindsSer.Add(typeof(UnityEngine.FilterMode),new Action<Writer,object>(Ser_unityengine_filtermode.Ser));
            bindsRes.Add(typeof(UnityEngine.FilterMode),new Func<Reader,object,object>(Ser_unityengine_filtermode.Res));
            bindsSer.Add(typeof(UnityEngine.TextureWrapMode),new Action<Writer,object>(Ser_unityengine_texturewrapmode.Ser));
            bindsRes.Add(typeof(UnityEngine.TextureWrapMode),new Func<Reader,object,object>(Ser_unityengine_texturewrapmode.Res));
            bindsSer.Add(typeof(UnityEngine.NPOTSupport),new Action<Writer,object>(Ser_unityengine_npotsupport.Ser));
            bindsRes.Add(typeof(UnityEngine.NPOTSupport),new Func<Reader,object,object>(Ser_unityengine_npotsupport.Res));
            bindsSer.Add(typeof(UnityEngine.TextureFormat),new Action<Writer,object>(Ser_unityengine_textureformat.Ser));
            bindsRes.Add(typeof(UnityEngine.TextureFormat),new Func<Reader,object,object>(Ser_unityengine_textureformat.Res));
            bindsSer.Add(typeof(UnityEngine.CubemapFace),new Action<Writer,object>(Ser_unityengine_cubemapface.Ser));
            bindsRes.Add(typeof(UnityEngine.CubemapFace),new Func<Reader,object,object>(Ser_unityengine_cubemapface.Res));
            bindsSer.Add(typeof(UnityEngine.RenderTextureFormat),new Action<Writer,object>(Ser_unityengine_rendertextureformat.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderTextureFormat),new Func<Reader,object,object>(Ser_unityengine_rendertextureformat.Res));
            bindsSer.Add(typeof(UnityEngine.VRTextureUsage),new Action<Writer,object>(Ser_unityengine_vrtextureusage.Ser));
            bindsRes.Add(typeof(UnityEngine.VRTextureUsage),new Func<Reader,object,object>(Ser_unityengine_vrtextureusage.Res));
            bindsSer.Add(typeof(UnityEngine.RenderTextureReadWrite),new Action<Writer,object>(Ser_unityengine_rendertexturereadwrite.Ser));
            bindsRes.Add(typeof(UnityEngine.RenderTextureReadWrite),new Func<Reader,object,object>(Ser_unityengine_rendertexturereadwrite.Res));
            bindsSer.Add(typeof(UnityEngine.LightmapsMode),new Action<Writer,object>(Ser_unityengine_lightmapsmode.Ser));
            bindsRes.Add(typeof(UnityEngine.LightmapsMode),new Func<Reader,object,object>(Ser_unityengine_lightmapsmode.Res));
            bindsSer.Add(typeof(UnityEngine.MaterialGlobalIlluminationFlags),new Action<Writer,object>(Ser_unityengine_materialglobalilluminationflags.Ser));
            bindsRes.Add(typeof(UnityEngine.MaterialGlobalIlluminationFlags),new Func<Reader,object,object>(Ser_unityengine_materialglobalilluminationflags.Res));
            bindsSer.Add(typeof(UnityEngine.CustomRenderTextureInitializationSource),new Action<Writer,object>(Ser_unityengine_customrendertextureinitializationsource.Ser));
            bindsRes.Add(typeof(UnityEngine.CustomRenderTextureInitializationSource),new Func<Reader,object,object>(Ser_unityengine_customrendertextureinitializationsource.Res));
            bindsSer.Add(typeof(UnityEngine.CustomRenderTextureUpdateMode),new Action<Writer,object>(Ser_unityengine_customrendertextureupdatemode.Ser));
            bindsRes.Add(typeof(UnityEngine.CustomRenderTextureUpdateMode),new Func<Reader,object,object>(Ser_unityengine_customrendertextureupdatemode.Res));
            bindsSer.Add(typeof(UnityEngine.CustomRenderTextureUpdateZoneSpace),new Action<Writer,object>(Ser_unityengine_customrendertextureupdatezonespace.Ser));
            bindsRes.Add(typeof(UnityEngine.CustomRenderTextureUpdateZoneSpace),new Func<Reader,object,object>(Ser_unityengine_customrendertextureupdatezonespace.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.OpaqueSortMode),new Action<Writer,object>(Ser_unityengine_rendering_opaquesortmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.OpaqueSortMode),new Func<Reader,object,object>(Ser_unityengine_rendering_opaquesortmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.RenderQueue),new Action<Writer,object>(Ser_unityengine_rendering_renderqueue.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.RenderQueue),new Func<Reader,object,object>(Ser_unityengine_rendering_renderqueue.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.RenderBufferLoadAction),new Action<Writer,object>(Ser_unityengine_rendering_renderbufferloadaction.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.RenderBufferLoadAction),new Func<Reader,object,object>(Ser_unityengine_rendering_renderbufferloadaction.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.RenderBufferStoreAction),new Action<Writer,object>(Ser_unityengine_rendering_renderbufferstoreaction.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.RenderBufferStoreAction),new Func<Reader,object,object>(Ser_unityengine_rendering_renderbufferstoreaction.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.BlendMode),new Action<Writer,object>(Ser_unityengine_rendering_blendmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.BlendMode),new Func<Reader,object,object>(Ser_unityengine_rendering_blendmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.BlendOp),new Action<Writer,object>(Ser_unityengine_rendering_blendop.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.BlendOp),new Func<Reader,object,object>(Ser_unityengine_rendering_blendop.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CompareFunction),new Action<Writer,object>(Ser_unityengine_rendering_comparefunction.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CompareFunction),new Func<Reader,object,object>(Ser_unityengine_rendering_comparefunction.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CullMode),new Action<Writer,object>(Ser_unityengine_rendering_cullmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CullMode),new Func<Reader,object,object>(Ser_unityengine_rendering_cullmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ColorWriteMask),new Action<Writer,object>(Ser_unityengine_rendering_colorwritemask.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ColorWriteMask),new Func<Reader,object,object>(Ser_unityengine_rendering_colorwritemask.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.StencilOp),new Action<Writer,object>(Ser_unityengine_rendering_stencilop.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.StencilOp),new Func<Reader,object,object>(Ser_unityengine_rendering_stencilop.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.AmbientMode),new Action<Writer,object>(Ser_unityengine_rendering_ambientmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.AmbientMode),new Func<Reader,object,object>(Ser_unityengine_rendering_ambientmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.DefaultReflectionMode),new Action<Writer,object>(Ser_unityengine_rendering_defaultreflectionmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.DefaultReflectionMode),new Func<Reader,object,object>(Ser_unityengine_rendering_defaultreflectionmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionCubemapCompression),new Action<Writer,object>(Ser_unityengine_rendering_reflectioncubemapcompression.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionCubemapCompression),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectioncubemapcompression.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CameraEvent),new Action<Writer,object>(Ser_unityengine_rendering_cameraevent.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CameraEvent),new Func<Reader,object,object>(Ser_unityengine_rendering_cameraevent.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.LightEvent),new Action<Writer,object>(Ser_unityengine_rendering_lightevent.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.LightEvent),new Func<Reader,object,object>(Ser_unityengine_rendering_lightevent.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ShadowMapPass),new Action<Writer,object>(Ser_unityengine_rendering_shadowmappass.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ShadowMapPass),new Func<Reader,object,object>(Ser_unityengine_rendering_shadowmappass.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.BuiltinRenderTextureType),new Action<Writer,object>(Ser_unityengine_rendering_builtinrendertexturetype.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.BuiltinRenderTextureType),new Func<Reader,object,object>(Ser_unityengine_rendering_builtinrendertexturetype.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.PassType),new Action<Writer,object>(Ser_unityengine_rendering_passtype.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.PassType),new Func<Reader,object,object>(Ser_unityengine_rendering_passtype.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ShadowCastingMode),new Action<Writer,object>(Ser_unityengine_rendering_shadowcastingmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ShadowCastingMode),new Func<Reader,object,object>(Ser_unityengine_rendering_shadowcastingmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.LightShadowResolution),new Action<Writer,object>(Ser_unityengine_rendering_lightshadowresolution.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.LightShadowResolution),new Func<Reader,object,object>(Ser_unityengine_rendering_lightshadowresolution.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.GraphicsDeviceType),new Action<Writer,object>(Ser_unityengine_rendering_graphicsdevicetype.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.GraphicsDeviceType),new Func<Reader,object,object>(Ser_unityengine_rendering_graphicsdevicetype.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.GraphicsTier),new Action<Writer,object>(Ser_unityengine_rendering_graphicstier.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.GraphicsTier),new Func<Reader,object,object>(Ser_unityengine_rendering_graphicstier.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeUsage),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobeusage.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeUsage),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobeusage.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeType),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobetype.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeType),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobetype.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeClearFlags),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobeclearflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeClearFlags),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobeclearflags.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeMode),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobemode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeMode),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobemode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeBlendInfo),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobeblendinfo.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeBlendInfo),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobeblendinfo.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeRefreshMode),new Action<Writer,object>(Ser_unityengine_rendering_reflectionproberefreshmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeRefreshMode),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionproberefreshmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.ReflectionProbeTimeSlicingMode),new Action<Writer,object>(Ser_unityengine_rendering_reflectionprobetimeslicingmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.ReflectionProbeTimeSlicingMode),new Func<Reader,object,object>(Ser_unityengine_rendering_reflectionprobetimeslicingmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.LightProbeUsage),new Action<Writer,object>(Ser_unityengine_rendering_lightprobeusage.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.LightProbeUsage),new Func<Reader,object,object>(Ser_unityengine_rendering_lightprobeusage.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.BuiltinShaderType),new Action<Writer,object>(Ser_unityengine_rendering_builtinshadertype.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.BuiltinShaderType),new Func<Reader,object,object>(Ser_unityengine_rendering_builtinshadertype.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.BuiltinShaderMode),new Action<Writer,object>(Ser_unityengine_rendering_builtinshadermode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.BuiltinShaderMode),new Func<Reader,object,object>(Ser_unityengine_rendering_builtinshadermode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.TextureDimension),new Action<Writer,object>(Ser_unityengine_rendering_texturedimension.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.TextureDimension),new Func<Reader,object,object>(Ser_unityengine_rendering_texturedimension.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CopyTextureSupport),new Action<Writer,object>(Ser_unityengine_rendering_copytexturesupport.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CopyTextureSupport),new Func<Reader,object,object>(Ser_unityengine_rendering_copytexturesupport.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.CameraHDRMode),new Action<Writer,object>(Ser_unityengine_rendering_camerahdrmode.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.CameraHDRMode),new Func<Reader,object,object>(Ser_unityengine_rendering_camerahdrmode.Res));
            bindsSer.Add(typeof(UnityEngine.Rendering.RealtimeGICPUUsage),new Action<Writer,object>(Ser_unityengine_rendering_realtimegicpuusage.Ser));
            bindsRes.Add(typeof(UnityEngine.Rendering.RealtimeGICPUUsage),new Func<Reader,object,object>(Ser_unityengine_rendering_realtimegicpuusage.Res));
            bindsSer.Add(typeof(JetBrains.Annotations.ImplicitUseKindFlags),new Action<Writer,object>(Ser_jetbrains_annotations_implicitusekindflags.Ser));
            bindsRes.Add(typeof(JetBrains.Annotations.ImplicitUseKindFlags),new Func<Reader,object,object>(Ser_jetbrains_annotations_implicitusekindflags.Res));
            bindsSer.Add(typeof(JetBrains.Annotations.ImplicitUseTargetFlags),new Action<Writer,object>(Ser_jetbrains_annotations_implicitusetargetflags.Ser));
            bindsRes.Add(typeof(JetBrains.Annotations.ImplicitUseTargetFlags),new Func<Reader,object,object>(Ser_jetbrains_annotations_implicitusetargetflags.Res));
            bindsSer.Add(typeof(UnityEngine.KeyCode),new Action<Writer,object>(Ser_unityengine_keycode.Ser));
            bindsRes.Add(typeof(UnityEngine.KeyCode),new Func<Reader,object,object>(Ser_unityengine_keycode.Res));
            bindsSer.Add(typeof(UnityEngine.BoneWeight),new Action<Writer,object>(Ser_unityengine_boneweight.Ser));
            bindsRes.Add(typeof(UnityEngine.BoneWeight),new Func<Reader,object,object>(Ser_unityengine_boneweight.Res));
            bindsSer.Add(typeof(UnityEngine.CombineInstance),new Action<Writer,object>(Ser_unityengine_combineinstance.Ser));
            bindsRes.Add(typeof(UnityEngine.CombineInstance),new Func<Reader,object,object>(Ser_unityengine_combineinstance.Res));
            bindsSer.Add(typeof(UnityEngine.Plane),new Action<Writer,object>(Ser_unityengine_plane.Ser));
            bindsRes.Add(typeof(UnityEngine.Plane),new Func<Reader,object,object>(Ser_unityengine_plane.Res));
            bindsSer.Add(typeof(UnityEngine.RangeInt),new Action<Writer,object>(Ser_unityengine_rangeint.Ser));
            bindsRes.Add(typeof(UnityEngine.RangeInt),new Func<Reader,object,object>(Ser_unityengine_rangeint.Res));
            bindsSer.Add(typeof(UnityEngine.Ray),new Action<Writer,object>(Ser_unityengine_ray.Ser));
            bindsRes.Add(typeof(UnityEngine.Ray),new Func<Reader,object,object>(Ser_unityengine_ray.Res));
            bindsSer.Add(typeof(UnityEngine.Ray2D),new Action<Writer,object>(Ser_unityengine_ray2d.Ser));
            bindsRes.Add(typeof(UnityEngine.Ray2D),new Func<Reader,object,object>(Ser_unityengine_ray2d.Res));
            bindsSer.Add(typeof(UnityEngine.Rect),new Action<Writer,object>(Ser_unityengine_rect.Ser));
            bindsRes.Add(typeof(UnityEngine.Rect),new Func<Reader,object,object>(Ser_unityengine_rect.Res));
            bindsSer.Add(typeof(UnityEngine.RuntimeInitializeLoadType),new Action<Writer,object>(Ser_unityengine_runtimeinitializeloadtype.Ser));
            bindsRes.Add(typeof(UnityEngine.RuntimeInitializeLoadType),new Func<Reader,object,object>(Ser_unityengine_runtimeinitializeloadtype.Res));
            bindsSer.Add(typeof(UnityEngine.UnityException),new Action<Writer,object>(Ser_unityengine_unityexception.Ser));
            bindsRes.Add(typeof(UnityEngine.UnityException),new Func<Reader,object,object>(Ser_unityengine_unityexception.Res));
            bindsSer.Add(typeof(UnityEngine.MissingComponentException),new Action<Writer,object>(Ser_unityengine_missingcomponentexception.Ser));
            bindsRes.Add(typeof(UnityEngine.MissingComponentException),new Func<Reader,object,object>(Ser_unityengine_missingcomponentexception.Res));
            bindsSer.Add(typeof(UnityEngine.UnassignedReferenceException),new Action<Writer,object>(Ser_unityengine_unassignedreferenceexception.Ser));
            bindsRes.Add(typeof(UnityEngine.UnassignedReferenceException),new Func<Reader,object,object>(Ser_unityengine_unassignedreferenceexception.Res));
            bindsSer.Add(typeof(UnityEngine.MissingReferenceException),new Action<Writer,object>(Ser_unityengine_missingreferenceexception.Ser));
            bindsRes.Add(typeof(UnityEngine.MissingReferenceException),new Func<Reader,object,object>(Ser_unityengine_missingreferenceexception.Res));
            bindsSer.Add(typeof(UnityEngine.Events.PersistentListenerMode),new Action<Writer,object>(Ser_unityengine_events_persistentlistenermode.Ser));
            bindsRes.Add(typeof(UnityEngine.Events.PersistentListenerMode),new Func<Reader,object,object>(Ser_unityengine_events_persistentlistenermode.Res));
            bindsSer.Add(typeof(UnityEngine.Events.UnityEventCallState),new Action<Writer,object>(Ser_unityengine_events_unityeventcallstate.Ser));
            bindsRes.Add(typeof(UnityEngine.Events.UnityEventCallState),new Func<Reader,object,object>(Ser_unityengine_events_unityeventcallstate.Res));
            bindsSer.Add(typeof(UnityEngine.Vector2),new Action<Writer,object>(Ser_unityengine_vector2.Ser));
            bindsRes.Add(typeof(UnityEngine.Vector2),new Func<Reader,object,object>(Ser_unityengine_vector2.Res));
            bindsSer.Add(typeof(UnityEngine.Vector4),new Action<Writer,object>(Ser_unityengine_vector4.Ser));
            bindsRes.Add(typeof(UnityEngine.Vector4),new Func<Reader,object,object>(Ser_unityengine_vector4.Res));
            bindsSer.Add(typeof(UnityEngine.Collections.Allocator),new Action<Writer,object>(Ser_unityengine_collections_allocator.Ser));
            bindsRes.Add(typeof(UnityEngine.Collections.Allocator),new Func<Reader,object,object>(Ser_unityengine_collections_allocator.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Director.FrameData.EvaluationType),new Action<Writer,object>(Ser_unityengine_experimental_director_framedata_evaluationtype.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Director.FrameData.EvaluationType),new Func<Reader,object,object>(Ser_unityengine_experimental_director_framedata_evaluationtype.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.CullingParameters),new Action<Writer,object>(Ser_unityengine_experimental_rendering_cullingparameters.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.CullingParameters),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_cullingparameters.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererFlags),new Action<Writer,object>(Ser_unityengine_experimental_rendering_drawrendererflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererFlags),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_drawrendererflags.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererSortSettings),new Action<Writer,object>(Ser_unityengine_experimental_rendering_drawrenderersortsettings.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.DrawRendererSortSettings),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_drawrenderersortsettings.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.DrawShadowsSettings),new Action<Writer,object>(Ser_unityengine_experimental_rendering_drawshadowssettings.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.DrawShadowsSettings),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_drawshadowssettings.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.InputFilter),new Action<Writer,object>(Ser_unityengine_experimental_rendering_inputfilter.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.InputFilter),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_inputfilter.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.LODParameters),new Action<Writer,object>(Ser_unityengine_experimental_rendering_lodparameters.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.LODParameters),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_lodparameters.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions),new Action<Writer,object>(Ser_unityengine_experimental_rendering_reflectionprobesortoptions.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_reflectionprobesortoptions.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.RendererConfiguration),new Action<Writer,object>(Ser_unityengine_experimental_rendering_rendererconfiguration.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.RendererConfiguration),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_rendererconfiguration.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.ShadowSplitData),new Action<Writer,object>(Ser_unityengine_experimental_rendering_shadowsplitdata.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.ShadowSplitData),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_shadowsplitdata.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.SortFlags),new Action<Writer,object>(Ser_unityengine_experimental_rendering_sortflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.SortFlags),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_sortflags.Res));
            bindsSer.Add(typeof(UnityEngine.Experimental.Rendering.VisibleLightFlags),new Action<Writer,object>(Ser_unityengine_experimental_rendering_visiblelightflags.Ser));
            bindsRes.Add(typeof(UnityEngine.Experimental.Rendering.VisibleLightFlags),new Func<Reader,object,object>(Ser_unityengine_experimental_rendering_visiblelightflags.Res));
            bindsSer.Add(typeof(UnityEngineInternal.TypeInferenceRules),new Action<Writer,object>(Ser_unityengineinternal_typeinferencerules.Ser));
            bindsRes.Add(typeof(UnityEngineInternal.TypeInferenceRules),new Func<Reader,object,object>(Ser_unityengineinternal_typeinferencerules.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.ConfidenceLevel),new Action<Writer,object>(Ser_unityengine_windows_speech_confidencelevel.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.ConfidenceLevel),new Func<Reader,object,object>(Ser_unityengine_windows_speech_confidencelevel.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.SpeechSystemStatus),new Action<Writer,object>(Ser_unityengine_windows_speech_speechsystemstatus.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.SpeechSystemStatus),new Func<Reader,object,object>(Ser_unityengine_windows_speech_speechsystemstatus.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.SpeechError),new Action<Writer,object>(Ser_unityengine_windows_speech_speecherror.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.SpeechError),new Func<Reader,object,object>(Ser_unityengine_windows_speech_speecherror.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.DictationTopicConstraint),new Action<Writer,object>(Ser_unityengine_windows_speech_dictationtopicconstraint.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.DictationTopicConstraint),new Func<Reader,object,object>(Ser_unityengine_windows_speech_dictationtopicconstraint.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.DictationCompletionCause),new Action<Writer,object>(Ser_unityengine_windows_speech_dictationcompletioncause.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.DictationCompletionCause),new Func<Reader,object,object>(Ser_unityengine_windows_speech_dictationcompletioncause.Res));
            bindsSer.Add(typeof(UnityEngine.Windows.Speech.SemanticMeaning),new Action<Writer,object>(Ser_unityengine_windows_speech_semanticmeaning.Ser));
            bindsRes.Add(typeof(UnityEngine.Windows.Speech.SemanticMeaning),new Func<Reader,object,object>(Ser_unityengine_windows_speech_semanticmeaning.Res));
        }
    }
}
